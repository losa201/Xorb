{
  "name": "Xorb PTaaS Development Environment",
  "dockerComposeFile": [
    "../compose/docker-compose.yml"
  ],
  "service": "api",
  "workspaceFolder": "/workspace",
  
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "installOhMyZshConfig": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "1000",
      "userGid": "1000"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.12",
      "installTools": true,
      "installJupyterlab": false,
      "configureGitCredentialHelper": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20",
      "nodeGypDependencies": true,
      "installYarnUsingApt": true
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": true,
      "moby": true
    },
    "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
      "version": "latest",
      "helm": "latest",
      "minikube": "none"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    }
  },
  
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "charliermarsh.ruff",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-docker",
        "ms-azuretools.vscode-docker",
        "googlecloudtools.cloudcode",
        "hashicorp.terraform",
        "ms-vscode.vscode-helm",
        "Tim-Koehler.helm-intellisense",
        "redhat.vscode-yaml",
        "ms-ossdata.vscode-postgresql",
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        "cweijan.vscode-redis-client",
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode.vscode-icons",
        "pkief.material-icon-theme",
        "zhuangtongfa.material-theme",
        "ms-vscode.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode.vscode-security-insights",
        "snyk-security.vscode-vuln-cost",
        "humao.rest-client",
        "42crunch.vscode-openapi",
        "rangav.vscode-thunder-client",
        "ms-vscode.vscode-prometheus",
        "grafana.vscode-jsonnet",
        "davidanson.vscode-markdownlint",
        "yzhang.markdown-all-in-one",
        "ms-vscode.live-server"
      ],
      
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.sortImports.provider": "isort",
        "python.analysis.typeCheckingMode": "strict",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.autoFormatStrings": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          ".",
          "--verbose",
          "--tb=short"
        ],
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true,
        "editor.formatOnType": false,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true,
          "source.fixAll": true
        },
        "files.associations": {
          "*.yaml": "yaml",
          "*.yml": "yaml",
          "Dockerfile*": "dockerfile",
          "*.json": "jsonc",
          "*.md": "markdown"
        },
        "yaml.schemas": {
          "https://json.schemastore.org/kustomization": "kustomization.yaml",
          "https://json.schemastore.org/chart": "Chart.yaml",
          "https://json.schemastore.org/helmfile": "helmfile.yaml",
          "https://json.schemastore.org/github-workflow": ".github/workflows/*.yml",
          "https://json.schemastore.org/github-workflow": ".github/workflows/*.yaml",
          "kubernetes": "*.k8s.yaml"
        },
        "yaml.customTags": [
          "!And sequence",
          "!Base64 scalar",
          "!Cidr scalar",
          "!Equals sequence",
          "!GetAZs scalar",
          "!GetAtt sequence",
          "!GetAtt scalar",
          "!If sequence",
          "!ImportValue scalar",
          "!Join sequence",
          "!Not sequence",
          "!Or sequence",
          "!Ref scalar",
          "!Select sequence",
          "!Split sequence",
          "!Sub scalar",
          "!Sub sequence"
        ],
        "docker.defaultRegistryPath": "registry.xorb.ai",
        "docker.imageBuildContextPath": "",
        "vs-kubernetes": {
          "vs-kubernetes.crd-code-completion": "enabled",
          "vs-kubernetes.helm-path": "/usr/local/bin/helm",
          "vs-kubernetes.kubectl-path": "/usr/local/bin/kubectl"
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh",
            "args": ["-l"]
          }
        },
        "terminal.integrated.cwd": "/workspace",
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "git.confirmSync": false,
        "git.defaultCloneDirectory": "/workspace",
        "security.workspace.trust.enabled": false,
        "workbench.colorTheme": "Material Theme Ocean High Contrast",
        "workbench.iconTheme": "material-icon-theme",
        "workbench.startupEditor": "readme",
        "search.exclude": {
          "**/node_modules": true,
          "**/venv": true,
          "**/.venv": true,
          "**/venv/**": true,
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/build": true,
          "**/dist": true,
          "**/.git": true,
          "**/target": true
        },
        "files.watcherExclude": {
          "**/node_modules/**": true,
          "**/venv/**": true,
          "**/.venv/**": true,
          "**/build/**": true,
          "**/dist/**": true,
          "**/.git/**": true,
          "**/target/**": true
        }
      }
    }
  },
  
  "forwardPorts": [
    8000,   // FastAPI API
    8080,   // Orchestrator
    9090,   // Worker metrics
    5432,   // PostgreSQL
    6379,   // Redis
    7233,   // Temporal
    8233,   // Temporal Web UI
    6333,   // Qdrant
    7474,   // Neo4j HTTP
    7687,   // Neo4j Bolt
    4222,   // NATS
    8222,   // NATS HTTP monitoring
    3000,   // Frontend (if available)
    9000,   // Prometheus
    3001    // Grafana
  ],
  "portsAttributes": {
    "8000": {
      "label": "Xorb API",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "Orchestrator",
      "onAutoForward": "silent"
    },
    "9090": {
      "label": "Worker Metrics",
      "onAutoForward": "silent"
    },
    "8233": {
      "label": "Temporal Web UI",
      "onAutoForward": "openBrowser"
    },
    "7474": {
      "label": "Neo4j Browser",
      "onAutoForward": "openBrowser"
    },
    "9000": {
      "label": "Prometheus",
      "onAutoForward": "silent"
    },
    "3001": {
      "label": "Grafana",
      "onAutoForward": "openBrowser"
    }
  },
  
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  "postStartCommand": "bash .devcontainer/post-start.sh",
  
  "remoteUser": "vscode",
  "containerUser": "vscode",
  
  "mounts": [
    "source=${localWorkspaceFolder}/.devcontainer/zsh-history,target=/home/vscode/.zsh_history,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.devcontainer/vscode-server,target=/home/vscode/.vscode-server,type=bind,consistency=cached"
  ],
  
  "remoteEnv": {
    "PYTHONPATH": "/workspace:/workspace/xorb_common:/workspace/services",
    "ENVIRONMENT": "development",
    "DEBUG": "true",
    "EPYC_OPTIMIZATION": "true"
  }
}