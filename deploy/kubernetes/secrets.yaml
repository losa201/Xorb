apiVersion: v1
kind: Secret
metadata:
  name: xorb-secrets
  namespace: xorb_platform
  labels:
    app: xorb_platform
    component: secrets
type: Opaque
stringData:
  # Database credentials
  DATABASE_URL: "postgresql+asyncpg://xorb_prod:CHANGE_ME_IN_PRODUCTION@postgres:5432/xorb_prod"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

  # Redis credentials
  REDIS_URL: "redis://:CHANGE_ME_IN_PRODUCTION@redis:6379/0"
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

  # JWT and API keys
  JWT_SECRET_KEY: "CHANGE_ME_IN_PRODUCTION_USE_VAULT"
  API_KEY_SECRET: "CHANGE_ME_IN_PRODUCTION_USE_VAULT"
  ENCRYPTION_KEY: "CHANGE_ME_IN_PRODUCTION_USE_VAULT"

  # External service API keys
  VIRUSTOTAL_API_KEY: "CONFIGURE_IN_PRODUCTION"
  MISP_API_KEY: "CONFIGURE_IN_PRODUCTION"
  ALIENVAILT_OTX_API_KEY: "CONFIGURE_IN_PRODUCTION"

  # Notification services
  SLACK_WEBHOOK_URL: "CONFIGURE_IN_PRODUCTION"
  TEAMS_WEBHOOK_URL: "CONFIGURE_IN_PRODUCTION"
  PAGERDUTY_API_KEY: "CONFIGURE_IN_PRODUCTION"
  SMTP_PASSWORD: "CONFIGURE_IN_PRODUCTION"

  # Cloud provider credentials
  AWS_ACCESS_KEY_ID: "CONFIGURE_IF_USING_AWS"
  AWS_SECRET_ACCESS_KEY: "CONFIGURE_IF_USING_AWS"
  AZURE_CLIENT_SECRET: "CONFIGURE_IF_USING_AZURE"
  GCP_SERVICE_ACCOUNT_KEY: "CONFIGURE_IF_USING_GCP"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: xorb_platform
  labels:
    app: postgres
    component: database
type: Opaque
stringData:
  POSTGRES_DB: "xorb_prod"
  POSTGRES_USER: "xorb_prod"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  POSTGRES_REPLICATION_USER: "replicator"
  POSTGRES_REPLICATION_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: xorb_platform
  labels:
    app: redis
    component: cache
type: Opaque
stringData:
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  REDIS_AUTH: "CHANGE_ME_IN_PRODUCTION"
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: xorb_platform
  labels:
    app: xorb_platform
    component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Replace with actual certificates in production
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: xorb-monitoring
  labels:
    app: grafana
    component: auth
type: Opaque
stringData:
  GF_SECURITY_ADMIN_USER: "admin"
  GF_SECURITY_ADMIN_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  GF_DATABASE_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
