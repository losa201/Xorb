# HTTP to HTTPS redirect for .de domain
server {
    listen 80;
    server_name verteidiq.de www.verteidiq.de;
    return 301 https://$server_name$request_uri;
}

# HTTPS server for verteidiq.de (German)
server {
    listen 443 ssl http2;
    server_name verteidiq.de www.verteidiq.de;

    # SSL Configuration
    ssl_certificate /root/Xorb/ssl/verteidiq.de.crt;
    ssl_certificate_key /root/Xorb/ssl/verteidiq.de.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # German GDPR Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data:; connect-src 'self' ws: wss: https: *.verteidiq.de;" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), vr=(), accelerometer=(), gyroscope=(), magnetometer=()" always;

    # GDPR Privacy headers
    add_header X-Powered-By "" always;
    add_header Server "" always;

    # Security
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Serve German homepage
    location / {
        root /var/www/homepage-de;
        index index.html;
        try_files $uri $uri/ /index.html;

        # German locale headers
        add_header Content-Language "de-DE" always;
        add_header X-Robots-Tag "index, follow" always;

        # Cache control for German content
        add_header Cache-Control "public, max-age=3600" always;
    }

    # German legal pages
    location /datenschutz {
        alias /var/www/homepage-de/legal/datenschutz.html;
        add_header Content-Language "de-DE" always;
        add_header Cache-Control "public, max-age=86400" always;
    }

    location /impressum {
        alias /var/www/homepage-de/legal/impressum.html;
        add_header Content-Language "de-DE" always;
        add_header Cache-Control "public, max-age=86400" always;
    }

    location /agb {
        alias /var/www/homepage-de/legal/agb.html;
        add_header Content-Language "de-DE" always;
        add_header Cache-Control "public, max-age=86400" always;
    }

    # Static assets with German-optimized caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg|webp)$ {
        root /var/www/homepage-de;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
    }

    # API endpoints (future expansion)
    location /api/ {
        # Placeholder for future German API
        return 503 "Coming Soon - Demnächst verfügbar";
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Language "de-DE";
    }

    # Health check endpoint for German site
    location /health {
        access_log off;
        return 200 "gesund - healthy\n";
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Language "de-DE";
    }

    # Block access to sensitive files
    location ~ /\.(ht|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup files
    location ~ \.(sql|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # German SEO sitemap
    location = /sitemap.xml {
        root /var/www/homepage-de;
        add_header Content-Type "application/xml; charset=utf-8";
        add_header Content-Language "de-DE";
        expires 1d;
    }

    # German robots.txt
    location = /robots.txt {
        root /var/www/homepage-de;
        add_header Content-Type "text/plain; charset=utf-8";
        expires 1d;
    }

    # Error pages in German
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;

    location = /404.html {
        root /var/www/homepage-de/errors;
        internal;
        add_header Content-Language "de-DE" always;
    }

    location = /500.html {
        root /var/www/homepage-de/errors;
        internal;
        add_header Content-Language "de-DE" always;
    }
}

# Rate limiting zones for German site
limit_req_zone $binary_remote_addr zone=german_frontend:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=german_api:10m rate=1r/s;
