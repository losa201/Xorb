# Promtail configuration for Xorb PTaaS log collection

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_compose_service']
        target_label: 'service'
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:

  # Xorb application logs
  - job_name: xorb-api
    static_configs:
      - targets:
          - localhost
        labels:
          job: xorb-api
          service: api
          __path__: /var/log/xorb/api.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: msg
            request_id: request_id
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          request_id:
          user_id:

  - job_name: xorb-worker
    static_configs:
      - targets:
          - localhost
        labels:
          job: xorb-worker
          service: worker
          __path__: /var/log/xorb/worker.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: msg
            workflow_id: workflow_id
            activity: activity
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          workflow_id:
          activity:

  - job_name: xorb-scanner
    static_configs:
      - targets:
          - localhost
        labels:
          job: xorb-scanner
          service: scanner
          __path__: /var/log/xorb/scanner.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: msg
            scan_id: scan_id
            target: target
            tool: tool
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          scan_id:
          tool:

  - job_name: xorb-triage
    static_configs:
      - targets:
          - localhost
        labels:
          job: xorb-triage
          service: triage
          __path__: /var/log/xorb/triage.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: msg
            finding_id: finding_id
            severity: severity
            confidence: confidence
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          finding_id:
          severity:

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "Jan 2 15:04:05"
      - labels:
          hostname:
          service:

  # Security logs
  - job_name: auth-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: auth
          __path__: /var/log/auth.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "Jan 2 15:04:05"
      - labels:
          hostname:
          service:

  # Docker daemon logs
  - job_name: docker-daemon
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/log/docker.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: time
            message: msg
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level: