version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: src/api/Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://temporal:temporal@postgres:5432/temporal
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./src:/app/src
    depends_on:
      - temporal
      - redis
      - postgres

  orchestrator:
    build:
      context: .
      dockerfile: src/orchestrator/Dockerfile
      target: development
    environment:
      - PYTHONPATH=/app/src
      - TEMPORAL_HOST=temporal:7233
    volumes:
      - ./src:/app/src
      - ./targets.json:/app/targets.json:rw
    depends_on:
      - temporal

  temporal:
    image: temporalio/auto-setup:1.22.0
    ports:
      - "7233:7233"
      - "8080:8080"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      - postgres
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig

  temporal-ui:
    image: temporalio/ui:2.21.3
    ports:
      - "8081:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    depends_on:
      - temporal

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: