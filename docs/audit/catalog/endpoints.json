{
  "fastapi_routes": [
    {
      "file": "src/common/tls_server.py",
      "method": "GET",
      "path": "/api/v1/health",
      "line": 319
    },
    {
      "file": "src/common/tls_server.py",
      "method": "GET",
      "path": "/api/v1/secure",
      "line": 324
    },
    {
      "file": "src/api/tests/test_auth.py",
      "method": "GET",
      "path": "/test",
      "line": 218
    },
    {
      "file": "src/api/tests/test_auth.py",
      "method": "GET",
      "path": "/test",
      "line": 234
    },
    {
      "file": "src/api/tests/test_auth.py",
      "type": "router_include",
      "router": "router",
      "line": 251
    },
    {
      "file": "src/api/tests/test_auth.py",
      "type": "router_include",
      "router": "router",
      "line": 270
    },
    {
      "file": "src/api/tests/test_security_enhancements.py",
      "method": "GET",
      "path": "/test",
      "line": 546
    },
    {
      "file": "src/api/app/main.py",
      "method": "GET",
      "path": "/docs",
      "line": 461
    },
    {
      "file": "src/api/app/main.py",
      "method": "GET",
      "path": "/redoc",
      "line": 482
    },
    {
      "file": "src/api/app/main.py",
      "method": "GET",
      "path": "/",
      "line": 493
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "health",
      "line": 314
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "auth",
      "line": 315
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "discovery",
      "line": 316
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "embeddings",
      "line": 317
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "ptaas",
      "line": 318
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "telemetry",
      "line": 319
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "orchestration",
      "line": 320
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "agents",
      "line": 321
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "security_dashboard",
      "line": 322
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "rate_limiting_admin",
      "line": 327
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "enterprise_management",
      "line": 334
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "enhanced_ptaas_orchestration",
      "line": 342
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "module",
      "line": 357
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "strategic_principal_auditor_ptaas",
      "line": 365
    },
    {
      "file": "src/api/app/main.py",
      "type": "router_include",
      "router": "module",
      "line": 388
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/",
      "line": 221
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/api/v1/info",
      "line": 270
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "health",
      "line": 203
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "auth",
      "line": 204
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "enterprise_auth",
      "line": 205
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "intelligence",
      "line": 206
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "telemetry",
      "line": 207
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "ptaas",
      "line": 208
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "ptaas_orchestration",
      "line": 209
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "unified_gateway",
      "line": 210
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "vectors",
      "line": 211
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "storage",
      "line": 212
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "jobs",
      "line": 213
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "system_status",
      "line": 214
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "enterprise_platform",
      "line": 215
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "enterprise_ai_platform",
      "line": 216
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "mitre_attack",
      "line": 217
    },
    {
      "file": "src/api/app/enhanced_main.py",
      "type": "router_include",
      "router": "sophisticated_red_team",
      "line": 218
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/atoms",
      "line": 152
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/atoms/{atom_id}",
      "line": 233
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/atoms",
      "line": 260
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/search",
      "line": 302
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/clusters",
      "line": 377
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/clusters/{cluster_id}/atoms",
      "line": 430
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/similarity",
      "line": 461
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/stats",
      "line": 494
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/atoms/{atom_id}/embedding",
      "line": 511
    },
    {
      "file": "src/api/app/routers/knowledge.py",
      "method": "DELETE",
      "path": "/atoms/{atom_id}",
      "line": 544
    },
    {
      "file": "src/api/app/routers/discovery.py",
      "method": "POST",
      "path": "/discover",
      "line": 28
    },
    {
      "file": "src/api/app/routers/discovery.py",
      "method": "GET",
      "path": "/discover/{workflow_id}",
      "line": 62
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "POST",
      "path": "/strategic-analysis",
      "line": 83
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "GET",
      "path": "/threat-landscape",
      "line": 156
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "POST",
      "path": "/red-team-operation/plan",
      "line": 197
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "POST",
      "path": "/red-team-operation/execute/{operation_id}",
      "line": 265
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "GET",
      "path": "/strategic-recommendations",
      "line": 333
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "GET",
      "path": "/security-posture/{organization_id}",
      "line": 393
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "GET",
      "path": "/compliance-dashboard/{framework}",
      "line": 448
    },
    {
      "file": "src/api/app/routers/principal_auditor_strategic_ptaas.py",
      "method": "GET",
      "path": "/metrics/strategic",
      "line": 506
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 55
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "POST",
      "path": "/database/optimize",
      "line": 102
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "POST",
      "path": "/ml/train-model",
      "line": 172
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "GET",
      "path": "/ml/models",
      "line": 258
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "POST",
      "path": "/ml/predict",
      "line": 290
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "POST",
      "path": "/services/discover",
      "line": 343
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "GET",
      "path": "/services/topology",
      "line": 412
    },
    {
      "file": "src/api/app/routers/enterprise_platform.py",
      "method": "POST",
      "path": "/database/backup",
      "line": 432
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/policies",
      "line": 82
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/policies/tenant/{tenant_id}",
      "line": 105
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/policies/role/{role_name}",
      "line": 149
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "DELETE",
      "path": "/policies/tenant/{tenant_id}",
      "line": 193
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/emergency/status",
      "line": 230
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/emergency/activate",
      "line": 252
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/emergency/deactivate",
      "line": 292
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/emergency/kill-switch/activate",
      "line": 325
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/emergency/kill-switch/deactivate",
      "line": 364
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/health",
      "line": 397
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/stats",
      "line": 420
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/top-limited-ips",
      "line": 449
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/optimize",
      "line": 472
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/maintenance/cleanup",
      "line": 494
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "GET",
      "path": "/shadow-mode/status",
      "line": 523
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/shadow-mode/enable",
      "line": 545
    },
    {
      "file": "src/api/app/routers/rate_limiting_admin.py",
      "method": "POST",
      "path": "/shadow-mode/disable",
      "line": 584
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "POST",
      "path": "/missions",
      "line": 131
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "GET",
      "path": "/missions/{mission_id}",
      "line": 209
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "POST",
      "path": "/intelligence/coordinate",
      "line": 263
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "POST",
      "path": "/quantum-security",
      "line": 321
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "POST",
      "path": "/agents/register",
      "line": 386
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "GET",
      "path": "/metrics",
      "line": 441
    },
    {
      "file": "src/api/app/routers/advanced_orchestration.py",
      "method": "GET",
      "path": "/health",
      "line": 476
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "POST",
      "path": "/upload-url",
      "line": 32
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "POST",
      "path": "/complete/{file_id}",
      "line": 96
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "GET",
      "path": "/download/{file_id}",
      "line": 141
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "GET",
      "path": "/evidence",
      "line": 189
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "GET",
      "path": "/evidence/{file_id}",
      "line": 232
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "DELETE",
      "path": "/evidence/{file_id}",
      "line": 270
    },
    {
      "file": "src/api/app/routers/storage.py",
      "method": "POST",
      "path": "/upload",
      "line": 319
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/status",
      "line": 69
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/threats",
      "line": 97
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "POST",
      "path": "/detect-threat",
      "line": 151
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "POST",
      "path": "/respond-threat",
      "line": 187
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/forecast",
      "line": 241
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "POST",
      "path": "/configure",
      "line": 283
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/metrics",
      "line": 349
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/health",
      "line": 380
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/operation-modes",
      "line": 422
    },
    {
      "file": "src/api/app/routers/autonomous_soc.py",
      "method": "GET",
      "path": "/threat-severities",
      "line": 438
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/threat-intelligence/analyze",
      "line": 63
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/threat-intelligence/correlate",
      "line": 109
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/threat-intelligence/prediction",
      "line": 143
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/threat-intelligence/report",
      "line": 177
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/vulnerability-assessment/scan",
      "line": 214
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/vulnerability-assessment/analyze",
      "line": 260
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/vulnerability-assessment/risk",
      "line": 290
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/red-team/simulation/create",
      "line": 333
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/red-team/simulation/{simulation_id}/execute",
      "line": 377
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/red-team/simulation/{simulation_id}/status",
      "line": 412
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/red-team/simulation/{simulation_id}/results",
      "line": 445
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/compliance/validate",
      "line": 477
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/compliance/report",
      "line": 512
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/compliance/gaps",
      "line": 549
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "POST",
      "path": "/compliance/remediation/track",
      "line": 583
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/platform/status",
      "line": 619
    },
    {
      "file": "src/api/app/routers/advanced_security_platform.py",
      "method": "GET",
      "path": "/platform/capabilities",
      "line": 676
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "POST",
      "path": "/sessions",
      "line": 72
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions/{session_id}",
      "line": 141
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "POST",
      "path": "/sessions/{session_id}/cancel",
      "line": 170
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/profiles",
      "line": 201
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions",
      "line": 220
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/metrics",
      "line": 247
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "POST",
      "path": "/validate-target",
      "line": 283
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/health",
      "line": 341
    },
    {
      "file": "src/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/scan-results/{session_id}",
      "line": 365
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "POST",
      "path": "/missions",
      "line": 163
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/missions/{mission_id}",
      "line": 238
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/missions",
      "line": 293
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "POST",
      "path": "/missions/{mission_id}/stop",
      "line": 342
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/capabilities/agents",
      "line": 374
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "POST",
      "path": "/capabilities/recommend",
      "line": 430
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "POST",
      "path": "/learning/feedback",
      "line": 483
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/learning/statistics",
      "line": 514
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/telemetry/mission/{mission_id}",
      "line": 530
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/telemetry/agent/{agent_id}",
      "line": 555
    },
    {
      "file": "src/api/app/routers/red_blue_agents.py",
      "method": "GET",
      "path": "/health",
      "line": 580
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "POST",
      "path": "/sessions",
      "line": 189
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "GET",
      "path": "/sessions/{session_id}",
      "line": 293
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "POST",
      "path": "/threat-simulation",
      "line": 352
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "POST",
      "path": "/intelligence/analyze",
      "line": 421
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "POST",
      "path": "/compliance/validate",
      "line": 495
    },
    {
      "file": "src/api/app/routers/principal_auditor_enhanced_ptaas.py",
      "method": "GET",
      "path": "/metrics/real-time",
      "line": 586
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "GET",
      "path": "/dashboard/overview",
      "line": 76
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "GET",
      "path": "/alerts",
      "line": 156
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "POST",
      "path": "/alerts/{alert_id}/acknowledge",
      "line": 228
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "GET",
      "path": "/metrics/real-time",
      "line": 273
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "GET",
      "path": "/compliance/status",
      "line": 327
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "GET",
      "path": "/threats/intelligence",
      "line": 423
    },
    {
      "file": "src/api/app/routers/security_dashboard.py",
      "method": "POST",
      "path": "/incident/create",
      "line": 496
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "POST",
      "path": "/analyze",
      "line": 192
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "POST",
      "path": "/patterns/detect",
      "line": 358
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "GET",
      "path": "/techniques",
      "line": 418
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "GET",
      "path": "/techniques/{technique_id}",
      "line": 485
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "POST",
      "path": "/predict/progression",
      "line": 507
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "POST",
      "path": "/intelligence/report",
      "line": 563
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "GET",
      "path": "/status",
      "line": 625
    },
    {
      "file": "src/api/app/routers/mitre_attack.py",
      "method": "POST",
      "path": "/cache/clear",
      "line": 656
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "POST",
      "path": "/scans",
      "line": 242
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "GET",
      "path": "/scans/{session_id}",
      "line": 350
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "GET",
      "path": "/scans/{session_id}/results",
      "line": 391
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "DELETE",
      "path": "/scans/{session_id}",
      "line": 443
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "GET",
      "path": "/profiles",
      "line": 469
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "POST",
      "path": "/compliance-scan",
      "line": 510
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "POST",
      "path": "/quantum-threat-assessment",
      "line": 552
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "POST",
      "path": "/quantum-channels/{session_id}",
      "line": 590
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_router.py",
      "method": "GET",
      "path": "/health",
      "line": 622
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health",
      "line": 110
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/metrics",
      "line": 179
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/prometheus",
      "line": 363
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/alerts",
      "line": 426
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "POST",
      "path": "/alerts/{alert_id}/acknowledge",
      "line": 493
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/api",
      "line": 513
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/agents",
      "line": 530
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/security",
      "line": 547
    },
    {
      "file": "src/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/intelligence",
      "line": 565
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/stats/{researcher_id}",
      "line": 493
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/my-stats",
      "line": 502
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/leaderboard",
      "line": 510
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/badges",
      "line": 519
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/badges/{researcher_id}",
      "line": 527
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "POST",
      "path": "/update-rating/{researcher_id}",
      "line": 536
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "POST",
      "path": "/recalculate-ratings",
      "line": 553
    },
    {
      "file": "src/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/rating-history/{researcher_id}",
      "line": 568
    },
    {
      "file": "src/api/app/routers/strategic_principal_auditor_ptaas.py",
      "method": "POST",
      "path": "/quantum-safe-validation",
      "line": 227
    },
    {
      "file": "src/api/app/routers/strategic_principal_auditor_ptaas.py",
      "method": "POST",
      "path": "/autonomous-red-team",
      "line": 320
    },
    {
      "file": "src/api/app/routers/strategic_principal_auditor_ptaas.py",
      "method": "POST",
      "path": "/neural-threat-analysis",
      "line": 447
    },
    {
      "file": "src/api/app/routers/strategic_principal_auditor_ptaas.py",
      "method": "POST",
      "path": "/adversarial-ai-detection",
      "line": 572
    },
    {
      "file": "src/api/app/routers/strategic_principal_auditor_ptaas.py",
      "method": "GET",
      "path": "/strategic-dashboard",
      "line": 679
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 75
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "GET",
      "path": "/events",
      "line": 104
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "POST",
      "path": "/threat-intelligence",
      "line": 168
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "GET",
      "path": "/threat-intelligence",
      "line": 224
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "POST",
      "path": "/analyze-request",
      "line": 287
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "GET",
      "path": "/statistics",
      "line": 330
    },
    {
      "file": "src/api/app/routers/security_monitoring.py",
      "method": "POST",
      "path": "/incidents",
      "line": 404
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/add",
      "line": 48
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/search",
      "line": 109
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/search-text",
      "line": 172
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "GET",
      "path": "/vector/{vector_id}",
      "line": 223
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "DELETE",
      "path": "/vector/{vector_id}",
      "line": 259
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "DELETE",
      "path": "/source/{source_id}",
      "line": 302
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "GET",
      "path": "/stats",
      "line": 348
    },
    {
      "file": "src/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/batch-add",
      "line": 382
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_orchestration.py",
      "method": "POST",
      "path": "/advanced-scan",
      "line": 103
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_orchestration.py",
      "method": "POST",
      "path": "/attack-simulation",
      "line": 211
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_orchestration.py",
      "method": "POST",
      "path": "/compliance-validation",
      "line": 273
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_orchestration.py",
      "method": "GET",
      "path": "/session/{session_id}/ai-insights",
      "line": 314
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_orchestration.py",
      "method": "GET",
      "path": "/threat-intelligence/dashboard",
      "line": 336
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "POST",
      "path": "/workflows/execute",
      "line": 82
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "POST",
      "path": "/threat-simulation",
      "line": 150
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "POST",
      "path": "/compliance-assessment",
      "line": 207
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "GET",
      "path": "/executions/{execution_id}",
      "line": 270
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "GET",
      "path": "/metrics",
      "line": 315
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "DELETE",
      "path": "/executions/{execution_id}",
      "line": 372
    },
    {
      "file": "src/api/app/routers/enterprise_ptaas.py",
      "method": "GET",
      "path": "/workflows",
      "line": 394
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/security",
      "line": 84
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/performance",
      "line": 131
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/business",
      "line": 175
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/compliance/{framework}",
      "line": 212
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "POST",
      "path": "/anomaly-detection",
      "line": 262
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/executive-report",
      "line": 294
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/dashboards/security",
      "line": 324
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/dashboards/performance",
      "line": 360
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/dashboards/business",
      "line": 400
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/metrics/summary",
      "line": 439
    },
    {
      "file": "src/api/app/routers/enhanced_analytics.py",
      "method": "GET",
      "path": "/health",
      "line": 477
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "POST",
      "path": "/reports/generate",
      "line": 88
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/reports",
      "line": 174
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/reports/{report_id}",
      "line": 221
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/reports/{report_id}/controls",
      "line": 266
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/reports/{report_id}/export/json",
      "line": 317
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/reports/{report_id}/export/html",
      "line": 357
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 397
    },
    {
      "file": "src/api/app/routers/compliance_reporting.py",
      "method": "GET",
      "path": "/frameworks",
      "line": 481
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "GET",
      "path": "/",
      "line": 150
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "POST",
      "path": "/",
      "line": 193
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}",
      "line": 230
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "PUT",
      "path": "/{agent_id}",
      "line": 247
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "DELETE",
      "path": "/{agent_id}",
      "line": 280
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}/status",
      "line": 312
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "POST",
      "path": "/{agent_id}/commands",
      "line": 344
    },
    {
      "file": "src/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}/logs",
      "line": 394
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/services",
      "line": 19
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/services/{service_id}/status",
      "line": 54
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/start",
      "line": 94
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/stop",
      "line": 126
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/restart",
      "line": 158
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/analytics/behavioral/profile",
      "line": 191
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/analytics/behavioral/update",
      "line": 222
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/analytics/behavioral/dashboard",
      "line": 252
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/threat-hunting/query",
      "line": 275
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/threat-hunting/queries",
      "line": 303
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/threat-hunting/queries",
      "line": 325
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/forensics/evidence",
      "line": 354
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/forensics/evidence/{evidence_id}",
      "line": 394
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/forensics/evidence/{evidence_id}/chain",
      "line": 428
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/network/segments",
      "line": 471
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/network/segments/{segment_id}/evaluate",
      "line": 508
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/health",
      "line": 535
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/metrics",
      "line": 589
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 627
    },
    {
      "file": "src/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/bulk-action",
      "line": 728
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 92
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/status",
      "line": 116
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/ptaas/scans",
      "line": 153
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/ptaas/scans/{session_id}",
      "line": 184
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/ptaas/scans/{session_id}/results",
      "line": 200
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "DELETE",
      "path": "/ptaas/scans/{session_id}",
      "line": 216
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/ptaas/profiles",
      "line": 235
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/ptaas/compliance-scan",
      "line": 252
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/intelligence/analyze",
      "line": 282
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/intelligence/correlate",
      "line": 308
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/intelligence/predict",
      "line": 332
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/intelligence/report",
      "line": 356
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/orchestration/workflows",
      "line": 383
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/orchestration/workflows/{workflow_id}/execute",
      "line": 409
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/orchestration/executions/{execution_id}",
      "line": 435
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/compliance/validate",
      "line": 457
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/compliance/frameworks",
      "line": 484
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/monitoring/alerts",
      "line": 534
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "POST",
      "path": "/monitoring/start",
      "line": 561
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/analytics/dashboard",
      "line": 589
    },
    {
      "file": "src/api/app/routers/production_security_platform.py",
      "method": "GET",
      "path": "/capabilities",
      "line": 648
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "POST",
      "path": "/strategic-mission",
      "line": 167
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "POST",
      "path": "/threat-intelligence",
      "line": 311
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "POST",
      "path": "/autonomous-red-team",
      "line": 381
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "POST",
      "path": "/compliance-orchestration",
      "line": 486
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "GET",
      "path": "/mission-status/{mission_id}",
      "line": 553
    },
    {
      "file": "src/api/app/routers/principal_auditor_orchestration.py",
      "method": "GET",
      "path": "/platform-intelligence",
      "line": 596
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "POST",
      "path": "/intelligence-enhanced-scan",
      "line": 110
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "POST",
      "path": "/threat-intelligence-context",
      "line": 228
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "POST",
      "path": "/generate-threat-hunting-queries",
      "line": 305
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "GET",
      "path": "/threat-landscape",
      "line": 376
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "GET",
      "path": "/sessions/{session_id}/intelligence-enhancement",
      "line": 438
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "POST",
      "path": "/bulk-intelligence-analysis",
      "line": 493
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas_intelligence.py",
      "method": "GET",
      "path": "/fusion-metrics",
      "line": 568
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/status",
      "line": 251
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/controls",
      "line": 258
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/report",
      "line": 265
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/evidence/{evidence_type}",
      "line": 273
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "POST",
      "path": "/trigger-collection",
      "line": 288
    },
    {
      "file": "src/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 308
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/status",
      "line": 74
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/initialize",
      "line": 96
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/assessment",
      "line": 121
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/microsegmentation/segments",
      "line": 150
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/microsegmentation/segments",
      "line": 183
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/microsegmentation/segments/{segment_id}",
      "line": 205
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/microsegmentation/segments/{segment_id}/assets",
      "line": 234
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/microsegmentation/traffic-rules",
      "line": 268
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/zero-trust/evaluate-access",
      "line": 302
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/zero-trust/policies",
      "line": 330
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/zero-trust/sessions",
      "line": 362
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "DELETE",
      "path": "/zero-trust/sessions/{session_id}",
      "line": 385
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/security/alerts",
      "line": 413
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/security/policies",
      "line": 446
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/security/investigate/{incident_id}",
      "line": 483
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/analytics/microsegmentation",
      "line": 515
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/analytics/zero-trust",
      "line": 537
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/analytics/threat-landscape",
      "line": 559
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "GET",
      "path": "/firewall/status",
      "line": 582
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/firewall/rules",
      "line": 605
    },
    {
      "file": "src/api/app/routers/advanced_networking.py",
      "method": "POST",
      "path": "/firewall/evaluate",
      "line": 642
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "POST",
      "path": "/detect",
      "line": 82
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "POST",
      "path": "/train",
      "line": 196
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "GET",
      "path": "/status",
      "line": 265
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "GET",
      "path": "/statistics",
      "line": 289
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "POST",
      "path": "/config",
      "line": 326
    },
    {
      "file": "src/api/app/routers/anomaly_detection.py",
      "method": "GET",
      "path": "/types",
      "line": 392
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/prometheus",
      "line": 30
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/api",
      "line": 43
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/ptaas",
      "line": 57
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/security",
      "line": 70
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/health/detailed",
      "line": 83
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/health/{service_name}",
      "line": 95
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "POST",
      "path": "/export",
      "line": 108
    },
    {
      "file": "src/api/app/routers/metrics.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 126
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/incidents",
      "line": 134
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "GET",
      "path": "/incidents/{incident_id}",
      "line": 210
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/threats/analyze",
      "line": 247
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/context/evaluate",
      "line": 359
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "GET",
      "path": "/metrics",
      "line": 440
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/policies",
      "line": 508
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "GET",
      "path": "/incidents",
      "line": 557
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/incidents/{incident_id}/actions",
      "line": 607
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 650
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "POST",
      "path": "/simulate/attack",
      "line": 717
    },
    {
      "file": "src/api/app/routers/advanced_security_operations.py",
      "method": "GET",
      "path": "/health",
      "line": 806
    },
    {
      "file": "src/api/app/routers/strategic_ptaas_enhancement.py",
      "method": "POST",
      "path": "/advanced-scan",
      "line": 240
    },
    {
      "file": "src/api/app/routers/strategic_ptaas_enhancement.py",
      "method": "POST",
      "path": "/threat-simulation",
      "line": 345
    },
    {
      "file": "src/api/app/routers/strategic_ptaas_enhancement.py",
      "method": "POST",
      "path": "/compliance-assessment",
      "line": 452
    },
    {
      "file": "src/api/app/routers/strategic_ptaas_enhancement.py",
      "method": "GET",
      "path": "/scan/{scan_id}/monitor",
      "line": 565
    },
    {
      "file": "src/api/app/routers/strategic_ptaas_enhancement.py",
      "method": "GET",
      "path": "/analytics/dashboard",
      "line": 615
    },
    {
      "file": "src/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/token",
      "line": 23
    },
    {
      "file": "src/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/logout",
      "line": 77
    },
    {
      "file": "src/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/dev-token",
      "line": 114
    },
    {
      "file": "src/api/app/routers/enterprise_compliance_automation.py",
      "method": "POST",
      "path": "/assessment",
      "line": 254
    },
    {
      "file": "src/api/app/routers/enterprise_compliance_automation.py",
      "method": "POST",
      "path": "/continuous-monitoring",
      "line": 372
    },
    {
      "file": "src/api/app/routers/enterprise_compliance_automation.py",
      "method": "POST",
      "path": "/gap-analysis",
      "line": 451
    },
    {
      "file": "src/api/app/routers/enterprise_compliance_automation.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 518
    },
    {
      "file": "src/api/app/routers/enterprise_compliance_automation.py",
      "method": "GET",
      "path": "/frameworks",
      "line": 647
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/tasks",
      "line": 201
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks",
      "line": 255
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/tasks/{task_id}",
      "line": 299
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "PUT",
      "path": "/tasks/{task_id}",
      "line": 316
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "DELETE",
      "path": "/tasks/{task_id}",
      "line": 363
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/metrics",
      "line": 391
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/optimize",
      "line": 440
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks/{task_id}/pause",
      "line": 498
    },
    {
      "file": "src/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks/{task_id}/resume",
      "line": 520
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/decisions",
      "line": 173
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/decisions/{decision_id}",
      "line": 200
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/feedback",
      "line": 217
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/models/train",
      "line": 244
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/models",
      "line": 276
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/models/{model_type}/brain-status",
      "line": 313
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/models/{model_type}/optimization",
      "line": 364
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/metrics",
      "line": 389
    },
    {
      "file": "src/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/continuous-learning/enable",
      "line": 457
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/health",
      "line": 127
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/cluster/status",
      "line": 156
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/metrics/performance",
      "line": 174
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/intelligence/report",
      "line": 223
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "POST",
      "path": "/optimization/analyze",
      "line": 241
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "POST",
      "path": "/intelligence/predict-performance",
      "line": 290
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/security/status",
      "line": 326
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/security/events",
      "line": 344
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/security/events/{event_id}/investigate",
      "line": 414
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/security/threats",
      "line": 442
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "POST",
      "path": "/cache/warmup",
      "line": 492
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "POST",
      "path": "/cache/invalidate",
      "line": 537
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/cache/info",
      "line": 583
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "POST",
      "path": "/admin/emergency-shutdown",
      "line": 632
    },
    {
      "file": "src/api/app/routers/advanced_redis_management.py",
      "method": "GET",
      "path": "/admin/system-diagnostics",
      "line": 663
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/schedule",
      "line": 30
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/schedule-bulk",
      "line": 75
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/cancel",
      "line": 117
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/status/{job_id}",
      "line": 152
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/list",
      "line": 194
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/queue-stats/{queue_name}",
      "line": 247
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/worker-stats",
      "line": 278
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/retry-failed",
      "line": 305
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/cleanup",
      "line": 341
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/evidence-processing/{evidence_id}",
      "line": 378
    },
    {
      "file": "src/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/malware-scan/{evidence_id}",
      "line": 400
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/status",
      "line": 120
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/agents/roles",
      "line": 142
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/entropy",
      "line": 167
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "POST",
      "path": "/evolve",
      "line": 188
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/cosynapse/state",
      "line": 221
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/agents/{agent_id}/metrics",
      "line": 242
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/clusters/{cluster_id}/agents",
      "line": 274
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/evolution/history",
      "line": 314
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/healing/events",
      "line": 363
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "POST",
      "path": "/agents/{agent_id}/heal",
      "line": 392
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/metrics/prometheus",
      "line": 427
    },
    {
      "file": "src/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/health",
      "line": 471
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/scenarios",
      "line": 141
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/plans",
      "line": 210
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/tactical-decisions",
      "line": 263
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/adaptive-strategies",
      "line": 325
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/execute",
      "line": 387
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/operations/{execution_id}/status",
      "line": 445
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/scenarios",
      "line": 485
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/performance",
      "line": 542
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/tactical-intelligence",
      "line": 585
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/framework-analytics",
      "line": 610
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "POST",
      "path": "/operations/{execution_id}/cancel",
      "line": 635
    },
    {
      "file": "src/api/app/routers/team_operations.py",
      "method": "GET",
      "path": "/health",
      "line": 673
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "POST",
      "path": "/workflows",
      "line": 78
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "GET",
      "path": "/workflows",
      "line": 129
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "POST",
      "path": "/workflows/{workflow_id}/execute",
      "line": 153
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "GET",
      "path": "/workflows/{workflow_id}/executions",
      "line": 198
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "POST",
      "path": "/compliance-scan",
      "line": 220
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "POST",
      "path": "/threat-simulation",
      "line": 276
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "GET",
      "path": "/orchestration-metrics",
      "line": 343
    },
    {
      "file": "src/api/app/routers/ptaas_orchestration.py",
      "method": "POST",
      "path": "/advanced-scan",
      "line": 396
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/threat-intelligence/analyze",
      "line": 78
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "GET",
      "path": "/threat-intelligence/status",
      "line": 138
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/network/microsegmentation/segments",
      "line": 166
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/network/microsegmentation/analyze-flow",
      "line": 214
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/crypto/quantum-safe/encrypt",
      "line": 243
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/crypto/quantum-safe/key-exchange",
      "line": 295
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/forensics/cases",
      "line": 333
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/forensics/cases/{case_id}/evidence",
      "line": 377
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/forensics/malware-analysis",
      "line": 437
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "POST",
      "path": "/red-team/operations",
      "line": 487
    },
    {
      "file": "src/api/app/routers/advanced_ai_security_platform.py",
      "method": "GET",
      "path": "/platform/status",
      "line": 528
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/african-pentest/comprehensive",
      "line": 138
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/mobile-money/security-assessment",
      "line": 209
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/ai/vulnerability-prediction",
      "line": 277
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/ai/code-analysis",
      "line": 328
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/exploit/custom-development",
      "line": 377
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/exploit/payload-generation",
      "line": 419
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/compliance/african-assessment",
      "line": 467
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "GET",
      "path": "/compliance/frameworks",
      "line": 530
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/threat-hunting/execute-hunt",
      "line": 567
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "POST",
      "path": "/incident-response/automated",
      "line": 629
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "GET",
      "path": "/health",
      "line": 696
    },
    {
      "file": "src/api/app/routers/advanced_ptaas_router.py",
      "method": "GET",
      "path": "/capabilities",
      "line": 746
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/initiate",
      "line": 143
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/callback",
      "line": 177
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/callback",
      "line": 261
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/configure",
      "line": 313
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/providers",
      "line": 369
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/status/{tenant_id}",
      "line": 427
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "DELETE",
      "path": "/sso/configure/{tenant_id}",
      "line": 450
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/metadata/{tenant_id}",
      "line": 482
    },
    {
      "file": "src/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/validate",
      "line": 528
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/health",
      "line": 27
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/readiness",
      "line": 38
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/status",
      "line": 105
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/metrics",
      "line": 194
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/version",
      "line": 207
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "POST",
      "path": "/warm-up",
      "line": 230
    },
    {
      "file": "src/api/app/routers/health.py",
      "method": "GET",
      "path": "/dependencies",
      "line": 298
    },
    {
      "file": "src/api/app/routers/system_status.py",
      "method": "GET",
      "path": "/health",
      "line": 50
    },
    {
      "file": "src/api/app/routers/system_status.py",
      "method": "GET",
      "path": "/status",
      "line": 110
    },
    {
      "file": "src/api/app/routers/system_status.py",
      "method": "GET",
      "path": "/production-readiness",
      "line": 231
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas.py",
      "method": "POST",
      "path": "/scans",
      "line": 142
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas.py",
      "method": "GET",
      "path": "/scans/{session_id}",
      "line": 235
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas.py",
      "method": "GET",
      "path": "/scans/{session_id}/report",
      "line": 267
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas.py",
      "method": "POST",
      "path": "/scans/{session_id}/actions/{action}",
      "line": 322
    },
    {
      "file": "src/api/app/routers/enhanced_ptaas.py",
      "method": "GET",
      "path": "/tools/available",
      "line": 359
    },
    {
      "file": "src/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings",
      "line": 78
    },
    {
      "file": "src/api/app/routers/embeddings.py",
      "method": "GET",
      "path": "/embeddings/models",
      "line": 143
    },
    {
      "file": "src/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings/similarity",
      "line": 165
    },
    {
      "file": "src/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings/batch",
      "line": 201
    },
    {
      "file": "src/api/app/routers/embeddings.py",
      "method": "GET",
      "path": "/embeddings/health",
      "line": 247
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats",
      "line": 208
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/threats",
      "line": 262
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats/{threat_id}",
      "line": 313
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "PUT",
      "path": "/threats/{threat_id}/status",
      "line": 330
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/threats/{threat_id}/respond",
      "line": 362
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats/{threat_id}/timeline",
      "line": 410
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/events",
      "line": 457
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/compliance",
      "line": 502
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/metrics",
      "line": 542
    },
    {
      "file": "src/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/alerts",
      "line": 603
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "POST",
      "path": "/organizations",
      "line": 102
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/organizations/{org_id}",
      "line": 175
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/organizations/{org_id}/usage",
      "line": 226
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "POST",
      "path": "/organizations/{org_id}/users",
      "line": 291
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/organizations/{org_id}/users",
      "line": 359
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/organizations/{org_id}/license",
      "line": 426
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/organizations/{org_id}/audit-logs",
      "line": 492
    },
    {
      "file": "src/api/app/routers/enterprise_management.py",
      "method": "GET",
      "path": "/system/health",
      "line": 577
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "GET",
      "path": "/status",
      "line": 133
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "POST",
      "path": "/threat-analysis",
      "line": 207
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "POST",
      "path": "/orchestration",
      "line": 272
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "POST",
      "path": "/advanced-scan",
      "line": 332
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "POST",
      "path": "/agents/command",
      "line": 389
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "GET",
      "path": "/insights/real-time",
      "line": 444
    },
    {
      "file": "src/api/app/routers/enterprise_ai_platform.py",
      "method": "GET",
      "path": "/analytics/performance",
      "line": 500
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "POST",
      "path": "/intelligence-guided-scan",
      "line": 115
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "GET",
      "path": "/missions/{mission_id}",
      "line": 236
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "GET",
      "path": "/missions/{mission_id}/intelligence-assets",
      "line": 292
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "POST",
      "path": "/missions/{mission_id}/correlate",
      "line": 360
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "GET",
      "path": "/analytics/unified",
      "line": 426
    },
    {
      "file": "src/api/app/routers/unified_intelligence_ptaas.py",
      "method": "GET",
      "path": "/health",
      "line": 499
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "POST",
      "path": "/threat-predictions",
      "line": 92
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/threat-predictions/{prediction_id}",
      "line": 147
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "POST",
      "path": "/compliance/assessments",
      "line": 189
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/compliance/frameworks",
      "line": 258
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/compliance/reports/{framework}",
      "line": 299
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "POST",
      "path": "/incidents",
      "line": 349
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/incidents/{incident_id}",
      "line": 410
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/incidents",
      "line": 456
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 531
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/analytics/risk-trends",
      "line": 640
    },
    {
      "file": "src/api/app/routers/enterprise_security_center.py",
      "method": "GET",
      "path": "/reports/executive-summary",
      "line": 685
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "POST",
      "path": "/objectives",
      "line": 113
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "POST",
      "path": "/operations/{operation_id}/execute",
      "line": 203
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/operations",
      "line": 260
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/operations/{operation_id}",
      "line": 316
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "POST",
      "path": "/threat-actors/{actor_id}/intelligence",
      "line": 386
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/threat-actors",
      "line": 435
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/defensive-insights",
      "line": 484
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/metrics",
      "line": 535
    },
    {
      "file": "src/api/app/routers/sophisticated_red_team.py",
      "method": "GET",
      "path": "/health",
      "line": 573
    },
    {
      "file": "src/api/app/auth/rbac_dependencies.py",
      "method": "GET",
      "path": "/sensitive",
      "line": 259
    },
    {
      "file": "src/api/app/auth/rbac_dependencies.py",
      "method": "POST",
      "path": "/admin",
      "line": 264
    },
    {
      "file": "src/api/app/auth/dependencies.py",
      "method": "GET",
      "path": "/sensitive",
      "line": 141
    },
    {
      "file": "src/api/app/auth/dependencies.py",
      "method": "POST",
      "path": "/admin",
      "line": 146
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "GET",
      "path": "/login",
      "line": 18
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "GET",
      "path": "/callback",
      "line": 38
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "POST",
      "path": "/logout",
      "line": 103
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "GET",
      "path": "/me",
      "line": 111
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "POST",
      "path": "/refresh",
      "line": 119
    },
    {
      "file": "src/api/app/auth/routes.py",
      "method": "GET",
      "path": "/roles",
      "line": 141
    },
    {
      "file": "src/api/app/security/file_upload.py",
      "method": "POST",
      "path": "/upload/image",
      "line": 396
    },
    {
      "file": "src/api/app/middleware/secure_tenant_middleware.py",
      "method": "GET",
      "path": "/protected",
      "line": 256
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/execute",
      "line": 85
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/{workflow_id}",
      "line": 98
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/executions/{execution_id}",
      "line": 147
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/executions/{execution_id}/cancel",
      "line": 161
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/{workflow_id}/metrics",
      "line": 197
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/enable",
      "line": 209
    },
    {
      "file": "src/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/disable",
      "line": 221
    },
    {
      "file": "services/ptaas/api.py",
      "method": "POST",
      "path": "/scan",
      "line": 122
    },
    {
      "file": "services/ptaas/api.py",
      "method": "GET",
      "path": "/status/{task_id}",
      "line": 171
    },
    {
      "file": "services/ptaas/api.py",
      "method": "GET",
      "path": "/report/{report_id}",
      "line": 200
    },
    {
      "file": "services/ptaas/api.py",
      "method": "GET",
      "path": "/download/{report_id}",
      "line": 230
    },
    {
      "file": "services/xorb-core/api/routes/compliance.py",
      "method": "POST",
      "path": "/validate",
      "line": 29
    },
    {
      "file": "services/xorb-core/api/routes/compliance.py",
      "method": "GET",
      "path": "/status/{validation_id}",
      "line": 53
    },
    {
      "file": "services/xorb-core/api/routes/compliance.py",
      "method": "GET",
      "path": "/report/{validation_id}",
      "line": 74
    },
    {
      "file": "services/xorb-core/api/routes/compliance.py",
      "method": "POST",
      "path": "/cancel/{validation_id}",
      "line": 115
    },
    {
      "file": "services/xorb-core/api/tests/test_auth.py",
      "method": "GET",
      "path": "/test",
      "line": 218
    },
    {
      "file": "services/xorb-core/api/tests/test_auth.py",
      "method": "GET",
      "path": "/test",
      "line": 234
    },
    {
      "file": "services/xorb-core/api/tests/test_auth.py",
      "type": "router_include",
      "router": "router",
      "line": 251
    },
    {
      "file": "services/xorb-core/api/tests/test_auth.py",
      "type": "router_include",
      "router": "router",
      "line": 270
    },
    {
      "file": "services/xorb-core/api/tests/test_security_enhancements.py",
      "method": "GET",
      "path": "/test",
      "line": 546
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "method": "GET",
      "path": "/health",
      "line": 291
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "method": "GET",
      "path": "/readiness",
      "line": 336
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "auth",
      "line": 165
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "discovery",
      "line": 172
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "embeddings",
      "line": 183
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "agents",
      "line": 195
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "orchestration",
      "line": 206
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "security_ops",
      "line": 217
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "intelligence",
      "line": 228
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "telemetry",
      "line": 239
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "storage",
      "line": 251
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "jobs",
      "line": 258
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "vectors",
      "line": 265
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "health",
      "line": 272
    },
    {
      "file": "services/xorb-core/api/app/main.py",
      "type": "router_include",
      "router": "unified_gateway",
      "line": 280
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/health",
      "line": 530
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/",
      "line": 535
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "POST",
      "path": "/orchestrate",
      "line": 552
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/agents/status",
      "line": 557
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/errors/summary",
      "line": 562
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "POST",
      "path": "/errors/clear-degradation/{function_name}",
      "line": 567
    },
    {
      "file": "services/xorb-core/api/app/enhanced_main.py",
      "method": "GET",
      "path": "/metrics/performance",
      "line": 573
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/atoms",
      "line": 152
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/atoms/{atom_id}",
      "line": 233
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/atoms",
      "line": 260
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/search",
      "line": 302
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/clusters",
      "line": 377
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/clusters/{cluster_id}/atoms",
      "line": 430
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/similarity",
      "line": 461
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "GET",
      "path": "/stats",
      "line": 494
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "POST",
      "path": "/atoms/{atom_id}/embedding",
      "line": 511
    },
    {
      "file": "services/xorb-core/api/app/routers/knowledge.py",
      "method": "DELETE",
      "path": "/atoms/{atom_id}",
      "line": 544
    },
    {
      "file": "services/xorb-core/api/app/routers/discovery.py",
      "method": "POST",
      "path": "/discover",
      "line": 28
    },
    {
      "file": "services/xorb-core/api/app/routers/discovery.py",
      "method": "GET",
      "path": "/discover/{workflow_id}",
      "line": 62
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "POST",
      "path": "/upload-url",
      "line": 32
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "POST",
      "path": "/complete/{file_id}",
      "line": 96
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "GET",
      "path": "/download/{file_id}",
      "line": 141
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "GET",
      "path": "/evidence",
      "line": 189
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "GET",
      "path": "/evidence/{file_id}",
      "line": 232
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "DELETE",
      "path": "/evidence/{file_id}",
      "line": 270
    },
    {
      "file": "services/xorb-core/api/app/routers/storage.py",
      "method": "POST",
      "path": "/upload",
      "line": 319
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/profiles",
      "line": 121
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "POST",
      "path": "/sessions",
      "line": 148
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions/{session_id}",
      "line": 213
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "POST",
      "path": "/sessions/{session_id}/cancel",
      "line": 240
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions/{session_id}/results",
      "line": 276
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions/{session_id}/report",
      "line": 345
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/sessions",
      "line": 394
    },
    {
      "file": "services/xorb-core/api/app/routers/ptaas.py",
      "method": "GET",
      "path": "/health",
      "line": 454
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health",
      "line": 110
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/metrics",
      "line": 179
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/prometheus",
      "line": 363
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/alerts",
      "line": 426
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "POST",
      "path": "/alerts/{alert_id}/acknowledge",
      "line": 493
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/api",
      "line": 513
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/agents",
      "line": 530
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/security",
      "line": 547
    },
    {
      "file": "services/xorb-core/api/app/routers/telemetry.py",
      "method": "GET",
      "path": "/health/intelligence",
      "line": 565
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/stats/{researcher_id}",
      "line": 493
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/my-stats",
      "line": 502
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/leaderboard",
      "line": 510
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/badges",
      "line": 519
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/badges/{researcher_id}",
      "line": 527
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "POST",
      "path": "/update-rating/{researcher_id}",
      "line": 536
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "POST",
      "path": "/recalculate-ratings",
      "line": 553
    },
    {
      "file": "services/xorb-core/api/app/routers/gamification.py",
      "method": "GET",
      "path": "/rating-history/{researcher_id}",
      "line": 568
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/add",
      "line": 48
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/search",
      "line": 109
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/search-text",
      "line": 172
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "GET",
      "path": "/vector/{vector_id}",
      "line": 223
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "DELETE",
      "path": "/vector/{vector_id}",
      "line": 259
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "DELETE",
      "path": "/source/{source_id}",
      "line": 302
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "GET",
      "path": "/stats",
      "line": 348
    },
    {
      "file": "services/xorb-core/api/app/routers/vectors.py",
      "method": "POST",
      "path": "/batch-add",
      "line": 382
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "GET",
      "path": "/",
      "line": 149
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "POST",
      "path": "/",
      "line": 192
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}",
      "line": 229
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "PUT",
      "path": "/{agent_id}",
      "line": 246
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "DELETE",
      "path": "/{agent_id}",
      "line": 279
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}/status",
      "line": 311
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "POST",
      "path": "/{agent_id}/commands",
      "line": 343
    },
    {
      "file": "services/xorb-core/api/app/routers/agents.py",
      "method": "GET",
      "path": "/{agent_id}/logs",
      "line": 393
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/services",
      "line": 19
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/services/{service_id}/status",
      "line": 54
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/start",
      "line": 94
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/stop",
      "line": 126
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/{service_id}/restart",
      "line": 158
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/analytics/behavioral/profile",
      "line": 191
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/analytics/behavioral/update",
      "line": 222
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/analytics/behavioral/dashboard",
      "line": 252
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/threat-hunting/query",
      "line": 275
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/threat-hunting/queries",
      "line": 303
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/threat-hunting/queries",
      "line": 325
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/forensics/evidence",
      "line": 354
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/forensics/evidence/{evidence_id}",
      "line": 394
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/forensics/evidence/{evidence_id}/chain",
      "line": 428
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/network/segments",
      "line": 471
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/network/segments/{segment_id}/evaluate",
      "line": 508
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/health",
      "line": 535
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/metrics",
      "line": 589
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 627
    },
    {
      "file": "services/xorb-core/api/app/routers/unified_gateway.py",
      "method": "POST",
      "path": "/services/bulk-action",
      "line": 728
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/status",
      "line": 251
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/controls",
      "line": 258
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/report",
      "line": 265
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/evidence/{evidence_type}",
      "line": 273
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "POST",
      "path": "/trigger-collection",
      "line": 288
    },
    {
      "file": "services/xorb-core/api/app/routers/compliance.py",
      "method": "GET",
      "path": "/dashboard",
      "line": 308
    },
    {
      "file": "services/xorb-core/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/token",
      "line": 19
    },
    {
      "file": "services/xorb-core/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/logout",
      "line": 62
    },
    {
      "file": "services/xorb-core/api/app/routers/auth.py",
      "method": "POST",
      "path": "/auth/dev-token",
      "line": 83
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/tasks",
      "line": 200
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks",
      "line": 254
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/tasks/{task_id}",
      "line": 298
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "PUT",
      "path": "/tasks/{task_id}",
      "line": 315
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "DELETE",
      "path": "/tasks/{task_id}",
      "line": 362
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "GET",
      "path": "/metrics",
      "line": 390
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/optimize",
      "line": 439
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks/{task_id}/pause",
      "line": 497
    },
    {
      "file": "services/xorb-core/api/app/routers/orchestration.py",
      "method": "POST",
      "path": "/tasks/{task_id}/resume",
      "line": 519
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/decisions",
      "line": 164
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/decisions/{decision_id}",
      "line": 191
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/feedback",
      "line": 208
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/models/train",
      "line": 235
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/models",
      "line": 267
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/models/{model_type}/brain-status",
      "line": 304
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/models/{model_type}/optimization",
      "line": 355
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "GET",
      "path": "/metrics",
      "line": 380
    },
    {
      "file": "services/xorb-core/api/app/routers/intelligence.py",
      "method": "POST",
      "path": "/continuous-learning/enable",
      "line": 448
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/schedule",
      "line": 30
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/schedule-bulk",
      "line": 75
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/cancel",
      "line": 117
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/status/{job_id}",
      "line": 152
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/list",
      "line": 194
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/queue-stats/{queue_name}",
      "line": 247
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "GET",
      "path": "/worker-stats",
      "line": 278
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/retry-failed",
      "line": 305
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/cleanup",
      "line": 341
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/evidence-processing/{evidence_id}",
      "line": 378
    },
    {
      "file": "services/xorb-core/api/app/routers/jobs.py",
      "method": "POST",
      "path": "/malware-scan/{evidence_id}",
      "line": 400
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/status",
      "line": 120
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/agents/roles",
      "line": 142
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/entropy",
      "line": 167
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "POST",
      "path": "/evolve",
      "line": 188
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/cosynapse/state",
      "line": 221
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/agents/{agent_id}/metrics",
      "line": 242
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/clusters/{cluster_id}/agents",
      "line": 274
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/evolution/history",
      "line": 314
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/healing/events",
      "line": 363
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "POST",
      "path": "/agents/{agent_id}/heal",
      "line": 392
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/metrics/prometheus",
      "line": 427
    },
    {
      "file": "services/xorb-core/api/app/routers/swarm.py",
      "method": "GET",
      "path": "/health",
      "line": 471
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/initiate",
      "line": 92
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/callback",
      "line": 122
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/callback",
      "line": 206
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/configure",
      "line": 258
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/providers",
      "line": 322
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/status/{tenant_id}",
      "line": 380
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "DELETE",
      "path": "/sso/configure/{tenant_id}",
      "line": 403
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "GET",
      "path": "/sso/metadata/{tenant_id}",
      "line": 436
    },
    {
      "file": "services/xorb-core/api/app/routers/enterprise_auth.py",
      "method": "POST",
      "path": "/sso/validate",
      "line": 482
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/health",
      "line": 27
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/readiness",
      "line": 38
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/status",
      "line": 105
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/metrics",
      "line": 194
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/version",
      "line": 207
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "POST",
      "path": "/warm-up",
      "line": 230
    },
    {
      "file": "services/xorb-core/api/app/routers/health.py",
      "method": "GET",
      "path": "/dependencies",
      "line": 298
    },
    {
      "file": "services/xorb-core/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings",
      "line": 78
    },
    {
      "file": "services/xorb-core/api/app/routers/embeddings.py",
      "method": "GET",
      "path": "/embeddings/models",
      "line": 143
    },
    {
      "file": "services/xorb-core/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings/similarity",
      "line": 165
    },
    {
      "file": "services/xorb-core/api/app/routers/embeddings.py",
      "method": "POST",
      "path": "/embeddings/batch",
      "line": 201
    },
    {
      "file": "services/xorb-core/api/app/routers/embeddings.py",
      "method": "GET",
      "path": "/embeddings/health",
      "line": 247
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats",
      "line": 208
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/threats",
      "line": 262
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats/{threat_id}",
      "line": 313
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "PUT",
      "path": "/threats/{threat_id}/status",
      "line": 330
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/threats/{threat_id}/respond",
      "line": 362
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/threats/{threat_id}/timeline",
      "line": 410
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/events",
      "line": 457
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/compliance",
      "line": 502
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "GET",
      "path": "/metrics",
      "line": 542
    },
    {
      "file": "services/xorb-core/api/app/routers/security_ops.py",
      "method": "POST",
      "path": "/alerts",
      "line": 603
    },
    {
      "file": "services/xorb-core/api/app/auth/dependencies.py",
      "method": "GET",
      "path": "/sensitive",
      "line": 141
    },
    {
      "file": "services/xorb-core/api/app/auth/dependencies.py",
      "method": "POST",
      "path": "/admin",
      "line": 146
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "GET",
      "path": "/login",
      "line": 18
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "GET",
      "path": "/callback",
      "line": 38
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "POST",
      "path": "/logout",
      "line": 103
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "GET",
      "path": "/me",
      "line": 111
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "POST",
      "path": "/refresh",
      "line": 119
    },
    {
      "file": "services/xorb-core/api/app/auth/routes.py",
      "method": "GET",
      "path": "/roles",
      "line": 141
    },
    {
      "file": "services/xorb-core/api/app/security/file_upload.py",
      "method": "POST",
      "path": "/upload/image",
      "line": 396
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/execute",
      "line": 85
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/{workflow_id}",
      "line": 98
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/executions/{execution_id}",
      "line": 147
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/executions/{execution_id}/cancel",
      "line": 161
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "GET",
      "path": "/{workflow_id}/metrics",
      "line": 197
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/enable",
      "line": 209
    },
    {
      "file": "services/xorb-core/orchestrator/api/workflow_api.py",
      "method": "POST",
      "path": "/{workflow_id}/disable",
      "line": 221
    },
    {
      "file": "tools/validation/validate_production_implementation.py",
      "type": "router_include",
      "router": "router",
      "line": 367
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/health",
      "line": 85
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "POST",
      "path": "/evolve/agent",
      "line": 105
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "POST",
      "path": "/detect/behavior",
      "line": 141
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "POST",
      "path": "/generate/insights",
      "line": 175
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/status/evolution",
      "line": 206
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/genomes/list",
      "line": 220
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/behaviors/emergent",
      "line": 248
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/insights/meta",
      "line": 279
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "POST",
      "path": "/evolution/batch",
      "line": 311
    },
    {
      "file": "tools/scripts/deployment/deploy_evolution_accelerator_service.py",
      "method": "GET",
      "path": "/metrics/performance",
      "line": 349
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/",
      "line": 322
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 326
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "POST",
      "path": "/orchestrate",
      "line": 335
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/agents/status",
      "line": 365
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "POST",
      "path": "/agents/evolve",
      "line": 374
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/performance/metrics",
      "line": 399
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/",
      "line": 456
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 460
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "POST",
      "path": "/learn",
      "line": 469
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/learning/status",
      "line": 493
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "POST",
      "path": "/evolve",
      "line": 504
    },
    {
      "file": "tools/scripts/deployment/deploy_autonomous_orchestration_platform.py",
      "method": "GET",
      "path": "/performance/analysis",
      "line": 527
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "GET",
      "path": "/health",
      "line": 439
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "GET",
      "path": "/platform/status",
      "line": 458
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "GET",
      "path": "/services",
      "line": 463
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "POST",
      "path": "/threat/orchestrate",
      "line": 473
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "GET",
      "path": "/threats/recent",
      "line": 505
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "GET",
      "path": "/policies",
      "line": 515
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "POST",
      "path": "/policies/update",
      "line": 520
    },
    {
      "file": "tools/scripts/utilities/unified_security_orchestrator.py",
      "method": "POST",
      "path": "/simulate/threat",
      "line": 532
    },
    {
      "file": "tools/scripts/utilities/ptaas_telemetry_pipeline.py",
      "method": "GET",
      "path": "/health",
      "line": 828
    },
    {
      "file": "tools/scripts/utilities/ptaas_telemetry_pipeline.py",
      "method": "POST",
      "path": "/api/v1/telemetry/ingest",
      "line": 841
    },
    {
      "file": "tools/scripts/utilities/ptaas_telemetry_pipeline.py",
      "method": "POST",
      "path": "/api/v1/telemetry/ingest/batch",
      "line": 851
    },
    {
      "file": "tools/scripts/utilities/ptaas_telemetry_pipeline.py",
      "method": "GET",
      "path": "/api/v1/telemetry/metrics",
      "line": 873
    },
    {
      "file": "tools/scripts/utilities/ptaas_telemetry_pipeline.py",
      "method": "GET",
      "path": "/api/v1/telemetry/stream",
      "line": 878
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "POST",
      "path": "/reports/generate",
      "line": 871
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports",
      "line": 893
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports/{report_id}",
      "line": 902
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports/summary",
      "line": 910
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports/compliance/frameworks",
      "line": 915
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports/metrics/summary",
      "line": 930
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/reports/dashboard",
      "line": 958
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system.py",
      "method": "GET",
      "path": "/health",
      "line": 1300
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/orchestration/status",
      "line": 602
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/orchestration/services",
      "line": 624
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/orchestration/alerts",
      "line": 643
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "POST",
      "path": "/orchestration/tasks/execute",
      "line": 659
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/orchestration/tasks",
      "line": 665
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/orchestration/metrics",
      "line": 674
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/",
      "line": 683
    },
    {
      "file": "tools/scripts/utilities/unified_orchestration_hub.py",
      "method": "GET",
      "path": "/health",
      "line": 1140
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "GET",
      "path": "/",
      "line": 35
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "GET",
      "path": "/health",
      "line": 39
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "POST",
      "path": "/orchestrate",
      "line": 48
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "GET",
      "path": "/agents/status",
      "line": 78
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "POST",
      "path": "/agents/evolve",
      "line": 87
    },
    {
      "file": "tools/scripts/utilities/autonomous_orchestrator_api.py",
      "method": "GET",
      "path": "/performance/metrics",
      "line": 112
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "POST",
      "path": "/auth/login",
      "line": 327
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "POST",
      "path": "/auth/register",
      "line": 356
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "GET",
      "path": "/auth/profile",
      "line": 377
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "POST",
      "path": "/auth/api-key",
      "line": 390
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "GET",
      "path": "/security/audit-logs",
      "line": 409
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "GET",
      "path": "/security/active-sessions",
      "line": 429
    },
    {
      "file": "tools/scripts/utilities/security_hardener.py",
      "method": "GET",
      "path": "/health",
      "line": 446
    },
    {
      "file": "tools/scripts/utilities/integrate_multi_adversary_platform.py",
      "method": "GET",
      "path": "/",
      "line": 747
    },
    {
      "file": "tools/scripts/utilities/integrate_multi_adversary_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 751
    },
    {
      "file": "tools/scripts/utilities/integrate_multi_adversary_platform.py",
      "method": "GET",
      "path": "/adversary-profiles",
      "line": 755
    },
    {
      "file": "tools/scripts/utilities/integrate_multi_adversary_platform.py",
      "method": "GET",
      "path": "/simulations",
      "line": 763
    },
    {
      "file": "tools/scripts/utilities/integrate_multi_adversary_platform.py",
      "method": "GET",
      "path": "/framework-status",
      "line": 771
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/feeds",
      "line": 351
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/indicators",
      "line": 360
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/campaigns",
      "line": 383
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/landscape",
      "line": 391
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/organization/{org_id}/score",
      "line": 397
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/threat-intelligence/real-time-demo",
      "line": 425
    },
    {
      "file": "tools/scripts/utilities/threat_intelligence_engine.py",
      "method": "GET",
      "path": "/health",
      "line": 533
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/platform/overview",
      "line": 308
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/platform/services",
      "line": 314
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/platform/services/{service_id}",
      "line": 333
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/platform/status",
      "line": 344
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/",
      "line": 368
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_summary.py",
      "method": "GET",
      "path": "/health",
      "line": 581
    },
    {
      "file": "tools/scripts/utilities/red_ops_console.py",
      "method": "GET",
      "path": "/",
      "line": 78
    },
    {
      "file": "tools/scripts/utilities/red_ops_console.py",
      "method": "GET",
      "path": "/launch-simulation",
      "line": 83
    },
    {
      "file": "tools/scripts/utilities/red_ops_console.py",
      "method": "GET",
      "path": "/health",
      "line": 100
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "POST",
      "path": "/ai/analyze",
      "line": 328
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "POST",
      "path": "/ai/stream",
      "line": 334
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "POST",
      "path": "/ai/conversation/create",
      "line": 345
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "POST",
      "path": "/ai/conversation/{conversation_id}/message",
      "line": 355
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/ai/conversations",
      "line": 361
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/ai/responses",
      "line": 379
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/ai/analytics",
      "line": 388
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/ai/models",
      "line": 393
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/",
      "line": 422
    },
    {
      "file": "tools/scripts/utilities/nvidia_ai_integration.py",
      "method": "GET",
      "path": "/health",
      "line": 751
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/health",
      "line": 993
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/api/v1/feedback/status",
      "line": 1006
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/api/v1/feedback/configurations",
      "line": 1011
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/api/v1/feedback/configurations/{agent_id}",
      "line": 1019
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/api/v1/feedback/actions",
      "line": 1027
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "GET",
      "path": "/api/v1/feedback/performance/{agent_id}",
      "line": 1037
    },
    {
      "file": "tools/scripts/utilities/ptaas_adaptive_feedback.py",
      "method": "POST",
      "path": "/api/v1/feedback/optimize/{agent_id}",
      "line": 1060
    },
    {
      "file": "tools/scripts/utilities/dashboard.py",
      "method": "GET",
      "path": "/",
      "line": 163
    },
    {
      "file": "tools/scripts/utilities/dashboard.py",
      "method": "GET",
      "path": "/api/gateway/status",
      "line": 168
    },
    {
      "file": "tools/scripts/utilities/dashboard.py",
      "method": "GET",
      "path": "/api/services/status",
      "line": 184
    },
    {
      "file": "tools/scripts/utilities/dashboard.py",
      "method": "GET",
      "path": "/health",
      "line": 219
    },
    {
      "file": "tools/scripts/utilities/multi_adversary_api.py",
      "method": "GET",
      "path": "/",
      "line": 30
    },
    {
      "file": "tools/scripts/utilities/multi_adversary_api.py",
      "method": "GET",
      "path": "/health",
      "line": 34
    },
    {
      "file": "tools/scripts/utilities/multi_adversary_api.py",
      "method": "GET",
      "path": "/adversary-profiles",
      "line": 38
    },
    {
      "file": "tools/scripts/utilities/multi_adversary_api.py",
      "method": "GET",
      "path": "/simulations",
      "line": 46
    },
    {
      "file": "tools/scripts/utilities/multi_adversary_api.py",
      "method": "GET",
      "path": "/framework-status",
      "line": 54
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "GET",
      "path": "/health",
      "line": 655
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/encrypt",
      "line": 674
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/decrypt",
      "line": 688
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/sign",
      "line": 707
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/verify",
      "line": 727
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "GET",
      "path": "/keys",
      "line": 748
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/keys/generate",
      "line": 762
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "POST",
      "path": "/keys/rotate",
      "line": 787
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "GET",
      "path": "/algorithms",
      "line": 800
    },
    {
      "file": "tools/scripts/utilities/quantum_resistant_cryptography.py",
      "method": "GET",
      "path": "/operations",
      "line": 808
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "GET",
      "path": "/health",
      "line": 611
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "POST",
      "path": "/api/v1/learning/events",
      "line": 637
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "GET",
      "path": "/api/v1/learning/insights",
      "line": 664
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "GET",
      "path": "/api/v1/learning/agents/optimal",
      "line": 669
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "GET",
      "path": "/api/v1/learning/performance/{agent_id}",
      "line": 682
    },
    {
      "file": "tools/scripts/utilities/ptaas_learning_integration.py",
      "method": "GET",
      "path": "/api/v1/learning/adaptations",
      "line": 695
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "POST",
      "path": "/reports/generate",
      "line": 536
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/reports",
      "line": 558
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/reports/{report_id}",
      "line": 567
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/reports/summary",
      "line": 575
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/reports/compliance/frameworks",
      "line": 580
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/reports/dashboard",
      "line": 595
    },
    {
      "file": "tools/scripts/utilities/enterprise_reporting_system_simplified.py",
      "method": "GET",
      "path": "/health",
      "line": 952
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "GET",
      "path": "/",
      "line": 35
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "GET",
      "path": "/health",
      "line": 39
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "POST",
      "path": "/learn",
      "line": 48
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "GET",
      "path": "/learning/status",
      "line": 72
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "POST",
      "path": "/evolve",
      "line": 83
    },
    {
      "file": "tools/scripts/utilities/autonomous_learning_api.py",
      "method": "GET",
      "path": "/performance/analysis",
      "line": 106
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "POST",
      "path": "/hardening/configure",
      "line": 613
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "POST",
      "path": "/hardening/assess",
      "line": 638
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "GET",
      "path": "/hardening/assessments",
      "line": 644
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "POST",
      "path": "/hardening/remediate/{assessment_id}",
      "line": 653
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "POST",
      "path": "/hardening/apply/{action_id}",
      "line": 663
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "GET",
      "path": "/hardening/rules",
      "line": 669
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "POST",
      "path": "/hardening/api-keys",
      "line": 695
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "GET",
      "path": "/hardening/summary",
      "line": 711
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "GET",
      "path": "/hardening/dashboard",
      "line": 716
    },
    {
      "file": "tools/scripts/utilities/advanced_security_hardening.py",
      "method": "GET",
      "path": "/health",
      "line": 1140
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/health",
      "line": 443
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/",
      "line": 455
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/api/dashboard/overview",
      "line": 700
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/api/charts/{chart_type}",
      "line": 705
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/api/tests/{test_id}",
      "line": 714
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/reports/{test_id}",
      "line": 734
    },
    {
      "file": "tools/scripts/utilities/ptaas_dashboard.py",
      "method": "GET",
      "path": "/reports/{test_id}/download",
      "line": 848
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "GET",
      "path": "/health",
      "line": 495
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "POST",
      "path": "/api/v1/tests",
      "line": 508
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "GET",
      "path": "/api/v1/tests/{test_id}",
      "line": 527
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "GET",
      "path": "/api/v1/tests",
      "line": 547
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "GET",
      "path": "/api/v1/agents",
      "line": 568
    },
    {
      "file": "tools/scripts/utilities/ptaas_core_orchestrator.py",
      "method": "GET",
      "path": "/api/v1/dashboard",
      "line": 590
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "GET",
      "path": "/",
      "line": 71
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "GET",
      "path": "/login",
      "line": 344
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "POST",
      "path": "/login",
      "line": 493
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "GET",
      "path": "/logout",
      "line": 508
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "GET",
      "path": "/api/status",
      "line": 518
    },
    {
      "file": "tools/scripts/utilities/web_dashboard_service.py",
      "method": "GET",
      "path": "/health",
      "line": 528
    },
    {
      "file": "tools/scripts/utilities/auto_scaler.py",
      "method": "GET",
      "path": "/scaling/status",
      "line": 293
    },
    {
      "file": "tools/scripts/utilities/auto_scaler.py",
      "method": "GET",
      "path": "/scaling/metrics/{service_name}",
      "line": 298
    },
    {
      "file": "tools/scripts/utilities/auto_scaler.py",
      "method": "POST",
      "path": "/scaling/manual/{service_name}/{action}",
      "line": 310
    },
    {
      "file": "tools/scripts/utilities/auto_scaler.py",
      "method": "GET",
      "path": "/scaling/decisions",
      "line": 328
    },
    {
      "file": "tools/scripts/utilities/auto_scaler.py",
      "method": "GET",
      "path": "/health",
      "line": 336
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "GET",
      "path": "/logs",
      "line": 390
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "GET",
      "path": "/alerts",
      "line": 400
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "GET",
      "path": "/health/system",
      "line": 410
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "POST",
      "path": "/alerts/{alert_id}/acknowledge",
      "line": 415
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "POST",
      "path": "/logs/manual",
      "line": 436
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "GET",
      "path": "/metrics/summary",
      "line": 442
    },
    {
      "file": "tools/scripts/utilities/logging_alerting.py",
      "method": "GET",
      "path": "/health",
      "line": 457
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/mobile/detect-device",
      "line": 249
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/mobile/dashboard",
      "line": 266
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/mobile/notifications",
      "line": 295
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "POST",
      "path": "/mobile/notifications/{notification_id}/read",
      "line": 305
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/mobile/services/status",
      "line": 315
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/",
      "line": 335
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/sw.js",
      "line": 1096
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/manifest.json",
      "line": 1152
    },
    {
      "file": "tools/scripts/utilities/mobile_responsive_interface.py",
      "method": "GET",
      "path": "/health",
      "line": 1179
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "POST",
      "path": "/collaboration/sessions",
      "line": 411
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/sessions",
      "line": 427
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/sessions/{session_id}",
      "line": 435
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/sessions/{session_id}/messages",
      "line": 452
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/annotations",
      "line": 465
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/users",
      "line": 482
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/analytics/overview",
      "line": 500
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/collaboration/demo",
      "line": 542
    },
    {
      "file": "tools/scripts/utilities/real_time_collaboration_platform.py",
      "method": "GET",
      "path": "/health",
      "line": 817
    }
  ],
  "express_routes": [
    {
      "file": "ptaas/api/express-server.js",
      "framework": "express",
      "method": "POST",
      "path": "/scans",
      "line": 46
    },
    {
      "file": "ptaas/api/express-server.js",
      "framework": "express",
      "method": "GET",
      "path": "/scans/:id",
      "line": 107
    },
    {
      "file": "ptaas/api/express-server.js",
      "framework": "express",
      "method": "GET",
      "path": "/reports/:id",
      "line": 158
    },
    {
      "file": "ptaas/api/express-server.js",
      "framework": "express",
      "method": "POST",
      "path": "/integrations/:type",
      "line": 205
    },
    {
      "file": "ptaas/api/express-server.js",
      "framework": "express",
      "method": "GET",
      "path": "/metrics",
      "line": 253
    }
  ],
  "grpc_services": [
    {
      "file": "proto/threat/v1/threat.proto",
      "service": "ThreatIntelligenceService",
      "rpcs": [
        {
          "method": "CreateThreatEvidence",
          "request": "CreateThreatEvidenceRequest",
          "response": "CreateThreatEvidenceResponse"
        },
        {
          "method": "GetThreatEvidence",
          "request": "GetThreatEvidenceRequest",
          "response": "GetThreatEvidenceResponse"
        },
        {
          "method": "ListThreatEvidence",
          "request": "ListThreatEvidenceRequest",
          "response": "ListThreatEvidenceResponse"
        },
        {
          "method": "UpdateThreatAssessment",
          "request": "UpdateThreatAssessmentRequest",
          "response": "UpdateThreatAssessmentResponse"
        },
        {
          "method": "SearchThreatIntelligence",
          "request": "SearchThreatIntelligenceRequest",
          "response": "SearchThreatIntelligenceResponse"
        },
        {
          "method": "ValidateEvidenceChain",
          "request": "ValidateEvidenceChainRequest",
          "response": "ValidateEvidenceChainResponse"
        }
      ]
    },
    {
      "file": "proto/compliance/v1/compliance.proto",
      "service": "ComplianceManagementService",
      "rpcs": [
        {
          "method": "CreateComplianceEvidence",
          "request": "CreateComplianceEvidenceRequest",
          "response": "CreateComplianceEvidenceResponse"
        },
        {
          "method": "GetComplianceEvidence",
          "request": "GetComplianceEvidenceRequest",
          "response": "GetComplianceEvidenceResponse"
        },
        {
          "method": "ListComplianceEvidence",
          "request": "ListComplianceEvidenceRequest",
          "response": "ListComplianceEvidenceResponse"
        },
        {
          "method": "UpdateComplianceAssessment",
          "request": "UpdateComplianceAssessmentRequest",
          "response": "UpdateComplianceAssessmentResponse"
        },
        {
          "method": "UpdateComplianceFinding",
          "request": "UpdateComplianceFindingRequest",
          "response": "UpdateComplianceFindingResponse"
        },
        {
          "method": "SearchCompliance",
          "request": "SearchComplianceRequest",
          "response": "SearchComplianceResponse"
        },
        {
          "method": "ValidateEvidenceChain",
          "request": "ValidateEvidenceChainRequest",
          "response": "ValidateEvidenceChainResponse"
        },
        {
          "method": "GenerateComplianceReport",
          "request": "GenerateComplianceReportRequest",
          "response": "GenerateComplianceReportResponse"
        },
        {
          "method": "GetFrameworkMapping",
          "request": "GetFrameworkMappingRequest",
          "response": "GetFrameworkMappingResponse"
        }
      ]
    },
    {
      "file": "proto/discovery/v1/discovery.proto",
      "service": "DiscoveryService",
      "rpcs": [
        {
          "method": "CreateDiscoveryJob",
          "request": "CreateDiscoveryJobRequest",
          "response": "CreateDiscoveryJobResponse"
        },
        {
          "method": "GetDiscoveryEvidence",
          "request": "GetDiscoveryEvidenceRequest",
          "response": "GetDiscoveryEvidenceResponse"
        },
        {
          "method": "ListDiscoveryEvidence",
          "request": "ListDiscoveryEvidenceRequest",
          "response": "ListDiscoveryEvidenceResponse"
        },
        {
          "method": "SearchAssets",
          "request": "SearchAssetsRequest",
          "response": "SearchAssetsResponse"
        },
        {
          "method": "GetAssetFingerprint",
          "request": "GetAssetFingerprintRequest",
          "response": "GetAssetFingerprintResponse"
        },
        {
          "method": "ValidateEvidenceChain",
          "request": "ValidateEvidenceChainRequest",
          "response": "ValidateEvidenceChainResponse"
        }
      ]
    },
    {
      "file": "proto/audit/v1/evidence.proto",
      "service": "AuditEvidenceService",
      "rpcs": [
        {
          "method": "CreateEvidence",
          "request": "CreateEvidenceRequest",
          "response": "CreateEvidenceResponse"
        },
        {
          "method": "GetEvidence",
          "request": "GetEvidenceRequest",
          "response": "GetEvidenceResponse"
        },
        {
          "method": "ListEvidence",
          "request": "ListEvidenceRequest",
          "response": "ListEvidenceResponse"
        },
        {
          "method": "AddCustodyRecord",
          "request": "AddCustodyRecordRequest",
          "response": "AddCustodyRecordResponse"
        },
        {
          "method": "ValidateChainOfCustody",
          "request": "ValidateChainOfCustodyRequest",
          "response": "ValidateChainOfCustodyResponse"
        },
        {
          "method": "SearchEvidence",
          "request": "SearchEvidenceRequest",
          "response": "SearchEvidenceResponse"
        },
        {
          "method": "ExportEvidence",
          "request": "ExportEvidenceRequest",
          "response": "ExportEvidenceResponse"
        }
      ]
    },
    {
      "file": "proto/vuln/v1/vulnerability.proto",
      "service": "VulnerabilityManagementService",
      "rpcs": [
        {
          "method": "CreateVulnerabilityEvidence",
          "request": "CreateVulnerabilityEvidenceRequest",
          "response": "CreateVulnerabilityEvidenceResponse"
        },
        {
          "method": "GetVulnerabilityEvidence",
          "request": "GetVulnerabilityEvidenceRequest",
          "response": "GetVulnerabilityEvidenceResponse"
        },
        {
          "method": "ListVulnerabilityEvidence",
          "request": "ListVulnerabilityEvidenceRequest",
          "response": "ListVulnerabilityEvidenceResponse"
        },
        {
          "method": "UpdateVulnerabilityAssessment",
          "request": "UpdateVulnerabilityAssessmentRequest",
          "response": "UpdateVulnerabilityAssessmentResponse"
        },
        {
          "method": "UpdateVulnerabilityState",
          "request": "UpdateVulnerabilityStateRequest",
          "response": "UpdateVulnerabilityStateResponse"
        },
        {
          "method": "SearchVulnerabilities",
          "request": "SearchVulnerabilitiesRequest",
          "response": "SearchVulnerabilitiesResponse"
        },
        {
          "method": "ValidateEvidenceChain",
          "request": "ValidateEvidenceChainRequest",
          "response": "ValidateEvidenceChainResponse"
        },
        {
          "method": "GenerateVulnerabilityReport",
          "request": "GenerateVulnerabilityReportRequest",
          "response": "GenerateVulnerabilityReportResponse"
        }
      ]
    }
  ],
  "openapi_specs": [
    {
      "file": "docs/api/xorb-openapi-spec.yaml",
      "version": "3.1.0",
      "title": "XORB Cybersecurity Platform API",
      "version_info": "1.0.0",
      "paths": [
        "/auth/token",
        "/auth/refresh",
        "/agents",
        "/agents/{agent_id}",
        "/agents/{agent_id}/status",
        "/tasks",
        "/tasks/{task_id}",
        "/security/threats",
        "/security/threats/{threat_id}/respond",
        "/telemetry/metrics",
        "/telemetry/health",
        "/config/system",
        "/intelligence/decisions",
        "/intelligence/feedback"
      ],
      "servers": [
        {
          "url": "https://api.xorb.security/v1",
          "description": "Production API"
        },
        {
          "url": "https://staging-api.xorb.security/v1",
          "description": "Staging API"
        },
        {
          "url": "http://localhost:8000/v1",
          "description": "Development API"
        }
      ]
    }
  ],
  "message_bus_usage": [
    {
      "file": "src/orchestrator/config.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 30,
      "context": "MB\", \"8192\")\n    )  # 8GB memory pool\n\n    # NATS JetStream tuning for high throughput\n    nats_max_ack_pendi"
    },
    {
      "file": "src/orchestrator/metrics.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 200,
      "context": "registry=self.registry,\n        )\n\n        # NATS JetStream metrics\n        self.nats_consumer_lag = Gauge("
    },
    {
      "file": "src/orchestrator/metrics.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 386,
      "context": "tr] = None,\n    ) -> None:\n        \"\"\"Record NATS JetStream metrics\"\"\"\n\n        # Consumer lag\n        self.n"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 796,
      "context": "}\n            \n            return await client.publish(channel, json.dumps(message_data))"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 824,
      "context": "b()\n        \n        try:\n            await pubsub.subscribe(channel)\n            \n            async for messag"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 80,
      "context": "message queues\"\"\"\n    max_length: int = 10000\n    consumer_group: str = \"default\"\n    acknowledge_timeout: int = 3"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 657,
      "context": "client(\"write\")\n            \n            # Create consumer group\n            try:\n                await client.xgr"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 661,
      "context": "queue_name, \n                    config.consumer_group, \n                    id=\"0\","
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 747,
      "context": "ait client.xreadgroup(\n                    config.consumer_group,\n                    consumer_name,"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 762,
      "context": "await client.xack(queue_name, config.consumer_group, message_id)"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 796,
      "context": "}\n            \n            return await client.publish(channel, json.dumps(message_data))"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 824,
      "context": "b()\n        \n        try:\n            await pubsub.subscribe(channel)\n            \n            async for messag"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 35,
      "context": "election\"\n    MESSAGE_QUEUE = \"message_queue\"\n    PUBSUB_COORDINATION = \"pubsub_coordination\"\n    RATE_LIM"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 35,
      "context": "UEUE = \"message_queue\"\n    PUBSUB_COORDINATION = \"pubsub_coordination\"\n    RATE_LIMITING = \"rate_limiting\""
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 113,
      "context": "_manager = MessageQueueManager(self)\n        self.pubsub_coordinator = PubSubCoordinator(self)\n        sel"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 113,
      "context": "ueManager(self)\n        self.pubsub_coordinator = PubSubCoordinator(self)\n        self.analytics_engine ="
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 242,
      "context": "elf.queue_manager.initialize()\n        await self.pubsub_coordinator.initialize()\n        await self.analy"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 773,
      "context": "\")\n                await asyncio.sleep(5)\n\n\nclass PubSubCoordinator:\n    \"\"\"Advanced Pub/Sub coordinator f"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 779,
      "context": "bers: Dict[str, List[Callable]] = {}\n        self.pubsub_tasks: Dict[str, asyncio.Task] = {}\n    \n    asyn"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 810,
      "context": "_subscription_loop(channel))\n                self.pubsub_tasks[channel] = task\n            \n            se"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 821,
      "context": "f.orchestrator.get_optimal_client(\"read\")\n        pubsub = client.pubsub()\n        \n        try:"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 821,
      "context": "et_optimal_client(\"read\")\n        pubsub = client.pubsub()\n        \n        try:\n            await pubsub."
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 824,
      "context": ".pubsub()\n        \n        try:\n            await pubsub.subscribe(channel)\n            \n            async"
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 826,
      "context": "el)\n            \n            async for message in pubsub.listen():\n                if message[\"type\"] == \""
    },
    {
      "file": "src/api/app/infrastructure/advanced_redis_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 844,
      "context": "hannel}: {e}\")\n        finally:\n            await pubsub.close()\n\n\nclass RealTimeAnalytics:\n    \"\"\"Real-ti"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 802,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"security_alerts\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 828,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"admin_alerts\",\n                a"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 853,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"soc_escalations\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 876,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"security_events\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 409,
      "context": "await self.orchestrator.pubsub_coordinator.subscribe(\n                \"redis_commands\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 802,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"security_alerts\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 828,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"admin_alerts\",\n                a"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 853,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"soc_escalations\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 876,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"security_events\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 409,
      "context": "await self.orchestrator.pubsub_coordinator.subscribe(\n                \"redis_commands\","
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 409,
      "context": "g is enabled)\n            await self.orchestrator.pubsub_coordinator.subscribe(\n                \"redis_com"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 802,
      "context": "ritical alert\n            await self.orchestrator.pubsub_coordinator.publish(\n                \"security_al"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 828,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"admin_alert"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 853,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"soc_escalat"
    },
    {
      "file": "src/api/app/services/sophisticated_redis_security_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 876,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                \"security_ev"
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 501,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                    \"performance_alerts\","
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 1128,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                    \"performance_anomalies\","
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 501,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                    \"performance_alerts\","
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 1128,
      "context": "await self.orchestrator.pubsub_coordinator.publish(\n                    \"performance_anomalies\","
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 501,
      "context": "n alerts:\n                await self.orchestrator.pubsub_coordinator.publish(\n                    \"perform"
    },
    {
      "file": "src/api/app/services/advanced_redis_intelligence_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 1128,
      "context": "end alert\n                await self.orchestrator.pubsub_coordinator.publish(\n                    \"perform"
    },
    {
      "file": "src/api/app/services/production_enterprise_platform_service.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 179,
      "context": "self.performance_metrics = {}\n        \n        # Redis client for caching and pub/sub\n        self.redis_client: Optional[aioredis."
    },
    {
      "file": "src/api/app/services/production_enterprise_platform_service.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 179,
      "context": "self.performance_metrics = {}\n        \n        # Redis client for caching and pub/sub\n        self.redis_client: Optional[aioredis.Redi"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 688,
      "context": "time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 814,
      "context": "}\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 688,
      "context": "is for real-time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 814,
      "context": "isoformat()\n        }\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 688,
      "context": "time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "src/xorb/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 814,
      "context": "}\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "src/xorb/audit/audit_logger.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 722,
      "context": "notifications\n            await self.redis_client.publish(\"audit_alerts\", json.dumps(alert))"
    },
    {
      "file": "src/xorb/audit/audit_logger.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 722,
      "context": "or real-time notifications\n            await self.redis_client.publish(\"audit_alerts\", json.dumps(alert))"
    },
    {
      "file": "src/xorb/audit/audit_logger.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 722,
      "context": "notifications\n            await self.redis_client.publish(\"audit_alerts\", json.dumps(alert))"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 14,
      "context": "t import Client as NATSClient\nfrom nats.js import JetStreamContext\nfrom nats.js.api import ConsumerConfig, Ac"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 46,
      "context": "\"\"\"High-performance PTaaS orchestrator with NATS JetStream backpressure\"\"\"\n\n    def __init__(self):"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 51,
      "context": "onal[NATSClient] = None\n        self.js: Optional[JetStreamContext] = None\n        self.task_runner: Optional"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 90,
      "context": "await self._connect_nats()\n\n        # Setup JetStream consumers with backpressure\n        await self._s"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 91,
      "context": "umers with backpressure\n        await self._setup_jetstream_consumers()\n\n        # Start monitoring loop"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 130,
      "context": ")\n\n            self.js = self.nats_client.jetstream()\n            logger.info(\"Connected to NATS JetS"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 131,
      "context": "ream()\n            logger.info(\"Connected to NATS JetStream\")\n\n        except Exception as e:\n            log"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 137,
      "context": "TS: {e}\")\n            raise\n\n    async def _setup_jetstream_consumers(self) -> None:\n        \"\"\"Setup JetStre"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 138,
      "context": "tstream_consumers(self) -> None:\n        \"\"\"Setup JetStream consumers with backpressure control\"\"\"\n\n        #"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 397,
      "context": "e.time(),\n            }\n\n            await self.js.publish(\n                subject=f\"ptaas.results.{job.tena"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 416,
      "context": "e.time(),\n            }\n\n            await self.js.publish(\n                subject=f\"ptaas.errors.{job.tenan"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 161,
      "context": "rocessing\n                consumer = await self.js.subscribe(\n                    subject=f\"ptaas.jobs.{job_typ"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 397,
      "context": "e.time(),\n            }\n\n            await self.js.publish(\n                subject=f\"ptaas.results.{job.tena"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 416,
      "context": "e.time(),\n            }\n\n            await self.js.publish(\n                subject=f\"ptaas.errors.{job.tenan"
    },
    {
      "file": "src/orchestrator/service/orchestrator_loop.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 161,
      "context": "rocessing\n                consumer = await self.js.subscribe(\n                    subject=f\"ptaas.jobs.{job_typ"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 2,
      "context": "\"\"\"\nXORB Platform Bus - NATS JetStream Implementation (ADR-002 Compliant)\n\nThis module p"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 4,
      "context": "le provides messaging bus capabilities using NATS JetStream only.\nRedis pub/sub is forbidden per ADR-002.\n\"\"\""
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 8,
      "context": "\"\"\"\n\nfrom .pubsub.nats_client import NATSClient, StreamConfig\n\n__all__ = [\"NATSClient\", \"StreamConfig\"]"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 10,
      "context": "TSClient, StreamConfig\n\n__all__ = [\"NATSClient\", \"StreamConfig\"]"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 5,
      "context": "aging bus capabilities using NATS JetStream only.\nRedis pub/sub is forbidden per ADR-002.\n\"\"\"\n\nfrom .pubsub.n"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 5,
      "context": "aging bus capabilities using NATS JetStream only.\nRedis pub/sub is forbidden per ADR-002.\n\"\"\"\n\nfrom .pubsub.nats_"
    },
    {
      "file": "platform/bus/__init__.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 8,
      "context": "edis pub/sub is forbidden per ADR-002.\n\"\"\"\n\nfrom .pubsub.nats_client import NATSClient, StreamConfig\n\n__al"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 2,
      "context": "\"\"\"\nNATS JetStream Client for Tier-2 Bus (ADR-002 Compliance)\nImplem"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 14,
      "context": "import datetime\n\nimport nats\nfrom nats.js import JetStreamContext\nfrom nats.aio.client import Client as NATS"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 22,
      "context": "e__)\n\n\n@dataclass\nclass StreamConfig:\n    \"\"\"NATS JetStream stream configuration\"\"\"\n\n    name: str\n    subjec"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 46,
      "context": "tr\n    trace_id: Optional[str] = None\n\n\nclass NATSJetStreamClient:\n    \"\"\"\n    Production NATS JetStream clie"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 48,
      "context": "NATSJetStreamClient:\n    \"\"\"\n    Production NATS JetStream client implementing ADR-002 requirements:\n    - E"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 61,
      "context": "onal[NATSClient] = None\n        self.js: Optional[JetStreamContext] = None\n\n        self.stream_config = Stre"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 78,
      "context": "Dict] = None) -> None:\n        \"\"\"Connect to NATS JetStream with mTLS authentication\"\"\"\n        try:"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 92,
      "context": "(**connect_options)\n            self.js = self.nc.jetstream()\n\n            # Create or update stream with WOR"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 97,
      "context": "ts()\n\n            logger.info(f\"Connected to NATS JetStream for tenant {self.tenant_id}\")\n\n        except Exc"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 158,
      "context": "y_key\n\n        try:\n            # Publish to NATS JetStream\n            ack = await self.js.publish("
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 321,
      "context": "def example_usage():\n    \"\"\"Example usage of NATS JetStream client\"\"\"\n\n    # Note: Redis usage here is for ca"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 327,
      "context": "ent proper cache interface\n\n    # Initialize NATS JetStream client\n    client = NATSJetStreamClient("
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 328,
      "context": "Initialize NATS JetStream client\n    client = NATSJetStreamClient(\n        nats_servers=[\"nats://localhost:42"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 159,
      "context": "to NATS JetStream\n            ack = await self.js.publish(\n                subject=message.subject, payload="
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 21,
      "context": "= logging.getLogger(__name__)\n\n\n@dataclass\nclass StreamConfig:\n    \"\"\"NATS JetStream stream configuration\"\"\""
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 22,
      "context": ")\n\n\n@dataclass\nclass StreamConfig:\n    \"\"\"NATS JetStream stream configuration\"\"\"\n\n    name: str\n    subjects: List[str]"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 63,
      "context": ": Optional[JetStreamContext] = None\n\n        self.stream_config = StreamConfig(\n            name=f\"XORB-{tenant_id.upper()}\","
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 104,
      "context": "(self) -> None:\n        \"\"\"Ensure tenant-specific stream exists with WORM configuration\"\"\"\n        try:\n            await self.js."
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 106,
      "context": "uration\"\"\"\n        try:\n            await self.js.stream_info(self.stream_config.name)\n            logger.info(f\"Stream {self.stre"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 107,
      "context": "elf.stream_config.name)\n            logger.info(f\"Stream {self.stream_config.name} exists\")\n        except Exception:"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 111,
      "context": "ait self.js.add_stream(\n                name=self.stream_config.name,\n                subjects=self.stream_config"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 112,
      "context": "stream_config.name,\n                subjects=self.stream_config.subjects,\n                retention=self.stream_c"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 113,
      "context": "m_config.subjects,\n                retention=self.stream_config.retention,\n                max_age=self.stream_co"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 114,
      "context": "am_config.retention,\n                max_age=self.stream_config.max_age,\n                storage=self.stream_conf"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 115,
      "context": "ream_config.max_age,\n                storage=self.stream_config.storage,\n                replicas=self.stream_con"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 116,
      "context": "eam_config.storage,\n                replicas=self.stream_config.replicas,\n                max_msgs_per_subject=se"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 117,
      "context": "plicas,\n                max_msgs_per_subject=self.stream_config.max_msgs_per_subject,\n                max_bytes=s"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 118,
      "context": "_msgs_per_subject,\n                max_bytes=self.stream_config.max_bytes,\n            )\n            logger.info("
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 120,
      "context": ")\n            logger.info(f\"Created WORM stream {self.stream_config.name}\")\n\n    async def publish_discovery_job(self"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 298,
      "context": "\"\"\"\n        try:\n            info = await self.js.stream_info(self.stream_config.name)\n            return {\n                \"name\""
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 164,
      "context": "blished in Redis (24h TTL)\n            await self.redis_client.setex(dedup_key, 86400, \"published\")\n\n            logger.info("
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 324,
      "context": "e is for caching/session management only\n    # No Redis pub/sub allowed per ADR-002 (NATS-only messaging)"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 324,
      "context": "e is for caching/session management only\n    # No Redis pub/sub allowed per ADR-002 (NATS-only messaging)\n    red"
    },
    {
      "file": "platform/bus/pubsub/nats_client.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 159,
      "context": "to NATS JetStream\n            ack = await self.js.publish(\n                subject=message.subject, payload="
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 249,
      "context": "us\": \"acknowledged\"\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 273,
      "context": "tcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 301,
      "context": "t()\n                }\n\n                await redis.publish('xorb:agent_status', json.dumps(status_update))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 383,
      "context": "tcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(coordination_msg))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 167,
      "context": "nt communication channels\n            await pubsub.subscribe('xorb:coordination', 'xorb:test_channel')"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 68,
      "context": "structlog\n    - Prometheus metrics emission\n    - Redis pub/sub communication\n    - PostgreSQL persistence"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 163,
      "context": "connection_pool=self.redis_pool)\n        pubsub = redis.pubsub()\n\n        try:\n            # Subscribe to age"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 193,
      "context": "ssage(self, message):\n        \"\"\"Process incoming Redis pub/sub message\"\"\"\n        try:\n            channel ="
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 249,
      "context": "\"status\": \"acknowledged\"\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 273,
      "context": "ime.utcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 301,
      "context": "format()\n                }\n\n                await redis.publish('xorb:agent_status', json.dumps(status_update"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 383,
      "context": "ime.utcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(coordination_"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 68,
      "context": "structlog\n    - Prometheus metrics emission\n    - Redis pub/sub communication\n    - PostgreSQL persistence\n    -"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 163,
      "context": "connection_pool=self.redis_pool)\n        pubsub = redis.pubsub()\n\n        try:\n            # Subscribe to agent"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 193,
      "context": "ssage(self, message):\n        \"\"\"Process incoming Redis pub/sub message\"\"\"\n        try:\n            channel = mes"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 249,
      "context": "us\": \"acknowledged\"\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 273,
      "context": "tcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(response))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 301,
      "context": "t()\n                }\n\n                await redis.publish('xorb:agent_status', json.dumps(status_update))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 383,
      "context": "tcnow().isoformat()\n        }\n\n        await redis.publish('xorb:coordination', json.dumps(coordination_msg))"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 167,
      "context": "nt communication channels\n            await pubsub.subscribe('xorb:coordination', 'xorb:test_channel')"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 163,
      "context": "is.Redis(connection_pool=self.redis_pool)\n        pubsub = redis.pubsub()\n\n        try:\n            # Subs"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 163,
      "context": "tion_pool=self.redis_pool)\n        pubsub = redis.pubsub()\n\n        try:\n            # Subscribe to agent"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 167,
      "context": "to agent communication channels\n            await pubsub.subscribe('xorb:coordination', 'xorb:test_channel"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 173,
      "context": "with timeout\n                    message = await pubsub.get_message(timeout=5.0)\n\n                    if"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 189,
      "context": "ncio.sleep(5)\n\n        finally:\n            await pubsub.unsubscribe('xorb:coordination', 'xorb:test_chann"
    },
    {
      "file": "tests/unit/test_autonomous_response.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 190,
      "context": "dination', 'xorb:test_channel')\n            await pubsub.close()\n\n    async def _process_message(self, mes"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 32,
      "context": "def test_two_tier_bus_mtls_jwt_evidence(\n    nats_jetstream: Tuple[nats.NATS, nats.js.JetStream],\n    uds_rin"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 32,
      "context": "nce(\n    nats_jetstream: Tuple[nats.NATS, nats.js.JetStream],\n    uds_ring_path: str,\n    cert_and_key_paths:"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 42,
      "context": "Tier-1 UDS.\n    2. Tier-1 forwards to Tier-2 NATS JetStream.\n    3. Discovery service consumes from Tier-2."
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 51,
      "context": "ier Bus Integration Test ---\")\n\n    nc, js = nats_jetstream\n    client_cert_path, client_key_path = cert_and_"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 107,
      "context": "sh to Tier-1 (UDS) by directly publishing to NATS JetStream...\")\n\n    # --- 6. Publish to Tier-2 (NATS JetStr"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 109,
      "context": "Stream...\")\n\n    # --- 6. Publish to Tier-2 (NATS JetStream) with mTLS and JWT ---\n    logger.info(f\"Publishi"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 138,
      "context": ")\n    discovery_service_js = discovery_service_nc.jetstream()\n\n    # Consumer function to process the job and"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 117,
      "context": ": \"application/protobuf\",\n    }\n    ack = await js.publish(\n        subject=test_topic,\n        payload=seria"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 163,
      "context": "evidence_ack = await discovery_service_js.publish(\n            subject=evidence_topic,\n            p"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 172,
      "context": "a durable consumer\n    await discovery_service_js.subscribe(\n        subject=test_topic,\n        durable=\"disc"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 236,
      "context": "the evidence topic\n    await discovery_service_js.subscribe(\n        subject=f\"discovery.evidence.v1.{test_ten"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 72,
      "context": "t simulated here.\n        # This test ensures the stream is configured for long retention.\n    )\n    logger.debug(f\""
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 263,
      "context": "led.\"\n\n    # ADR-002: WORM Retention (checked via stream config, not message content)\n    # This is a proxy check"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 266,
      "context": "fo = await js.stream_info(stream_name)\n    assert stream_info.config.retention == nats.js.api.RetentionPolicies.LIMITS"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 267,
      "context": "et for long-term (WORM-like) storage.\"\n    assert stream_info.config.max_age > 0, \"NATS stream max_age is not set for"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 117,
      "context": ": \"application/protobuf\",\n    }\n    ack = await js.publish(\n        subject=test_topic,\n        payload=seria"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 163,
      "context": "evidence_ack = await discovery_service_js.publish(\n            subject=evidence_topic,\n            p"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 172,
      "context": "a durable consumer\n    await discovery_service_js.subscribe(\n        subject=test_topic,\n        durable=\"disc"
    },
    {
      "file": "tests/integration/test_bus_end_to_end.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.subscribe\\s*\\(",
      "line": 236,
      "context": "the evidence topic\n    await discovery_service_js.subscribe(\n        subject=f\"discovery.evidence.v1.{test_ten"
    },
    {
      "file": "tests/integration/conftest.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 20,
      "context": "es.nats_server import nats_server, nats_url, nats_jetstream\n# noinspection PyUnresolvedReferences\nfrom tests."
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 1,
      "context": "\"\"\"Fixtures for managing a local NATS JetStream server for integration tests.\"\"\"\n\nimport asyncio"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 32,
      "context": "None, None]:\n    \"\"\"\n    Starts a NATS server in JetStream mode for the test session.\n    Yields the server"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 43,
      "context": "[\n        \"nats-server\",\n        \"-js\",  # Enable JetStream\n        \"-sd\", nats_store_dir,  # Store directory"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 50,
      "context": "for tests\n    ]\n\n    logger.info(f\"Starting NATS JetStream server with command: {' '.join(nats_cmd)}\")"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 127,
      "context": "ug(\"Closed NATS client connection.\")\n\n\n# --- NATS JetStream Context ---\n@pytest_asyncio.fixture(scope=\"sessio"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 129,
      "context": "t_asyncio.fixture(scope=\"session\")\nasync def nats_jetstream(nats_client: nats.NATS) -> AsyncGenerator[Tuple[n"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 129,
      "context": ".NATS) -> AsyncGenerator[Tuple[nats.NATS, nats.js.JetStream], None]:\n    \"\"\"Provides the NATS client and JetS"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 130,
      "context": "ream], None]:\n    \"\"\"Provides the NATS client and JetStream context.\"\"\"\n    js = nats_client.jetstream()"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 131,
      "context": "nt and JetStream context.\"\"\"\n    js = nats_client.jetstream()\n    logger.debug(\"Obtained NATS JetStream conte"
    },
    {
      "file": "tests/integration/fixtures/nats_server.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 132,
      "context": "lient.jetstream()\n    logger.debug(\"Obtained NATS JetStream context.\")\n    yield nats_client, js"
    },
    {
      "file": "wargame-enterprise/purple-orchestrator/purple_environment_generator.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 138,
      "context": "\"message_queue\", \"type\": \"messaging\", \"engine\": \"rabbitmq\"}\n                ],\n                compliance_c"
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 131,
      "context": "mpletion event\n            await self.redis_client.publish(\n                \"compliance_validation_complete\","
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 569,
      "context": "sh error event\n            await self.redis_client.publish(\n                \"compliance_validation_error\","
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 131,
      "context": "# Publish completion event\n            await self.redis_client.publish(\n                \"compliance_validation_compl"
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 569,
      "context": "# Publish error event\n            await self.redis_client.publish(\n                \"compliance_validation_error"
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 131,
      "context": "mpletion event\n            await self.redis_client.publish(\n                \"compliance_validation_complete\","
    },
    {
      "file": "services/xorb-core/orchestration/compliance_orchestrator.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 569,
      "context": "sh error event\n            await self.redis_client.publish(\n                \"compliance_validation_error\","
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 688,
      "context": "time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 814,
      "context": "}\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 688,
      "context": "is for real-time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data"
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 814,
      "context": "isoformat()\n        }\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data"
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 688,
      "context": "time notifications\n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "services/xorb-core/intelligence/vulnerability_correlation_engine.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 814,
      "context": "}\n        \n        await self.redis_client.publish(\"vulnerability_alerts\", json.dumps(alert_data))"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 119,
      "context": "))\n        \n        # Check NATS JetStream implementation\n        nats_file = self.repo_root"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 123,
      "context": "content = nats_file.read_text()\n            if \"JetStream\" in content and \"WORM\" in content:"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 126,
      "context": "ADR-002-NATS\", \"PASS\", \n                    \"NATS JetStream client implemented with WORM retention\""
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 131,
      "context": "\"NATS client exists but missing JetStream/WORM features\"\n                ))\n        else:"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 136,
      "context": "\"ADR-002-NATS\", \"FAIL\", \n                \"NATS JetStream client missing\"\n            ))\n        \n        #"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 255,
      "context": ")\"\"\"\n        violation_patterns = [\n            r\"redis\\.(pubsub|subscribe|psubscribe)\",\n            r\"redis\\.c"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 256,
      "context": "is\\.(pubsub|subscribe|psubscribe)\",\n            r\"redis\\.client\\.PubSub\",\n            r\"RedisStreams?\",\n            r\""
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 259,
      "context": ",\n            r\"XADD|XREAD|XGROUP\",\n            r\"redis.*stream.*publish\",\n            r\"redis.*as.*bus\"\n        ]"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 255,
      "context": ")\"\"\"\n        violation_patterns = [\n            r\"redis\\.(pubsub|subscribe|psubscribe)\",\n            r\"redis\\.client\\.PubSub\","
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 256,
      "context": "is\\.(pubsub|subscribe|psubscribe)\",\n            r\"redis\\.client\\.PubSub\",\n            r\"RedisStreams?\",\n            r\"XAD"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 105,
      "context": "rectories exist\n        bus_dirs = [\"platform/bus/pubsub\", \"platform/bus/localring\"]\n        for bus_dir i"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 120,
      "context": "nats_file = self.repo_root / \"platform/bus/pubsub/nats_client.py\"\n        if nats_file.exists():"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 255,
      "context": "violation_patterns = [\n            r\"redis\\.(pubsub|subscribe|psubscribe)\",\n            r\"redis\\.clie"
    },
    {
      "file": "tools/adr/final_adr_validation.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 256,
      "context": "scribe|psubscribe)\",\n            r\"redis\\.client\\.PubSub\",\n            r\"RedisStreams?\",\n            r\"XAD"
    },
    {
      "file": "tools/planning/autocollect.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 73,
      "context": "\"pubsub\" in path.read_text():\n                    redis_usage.append(\"pubsub\")\n                if \"cache\" in path.read_text"
    },
    {
      "file": "tools/planning/autocollect.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 73,
      "context": "\"pubsub\" in path.read_text():\n                    redis_usage.append(\"pubsub\")\n                if \"cache\" in path.read_text():"
    },
    {
      "file": "tools/planning/autocollect.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 72,
      "context": "\"redis\" in path.read_text():\n                if \"pubsub\" in path.read_text():\n                    redis_u"
    },
    {
      "file": "tools/planning/autocollect.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 73,
      "context": "d_text():\n                    redis_usage.append(\"pubsub\")\n                if \"cache\" in path.read_text():"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 208,
      "context": "nd_message_bus_usage(root_path):\n    \"\"\"Find NATS JetStream and other message bus usage.\"\"\"\n    root = Path(r"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 214,
      "context": "for NATS patterns\n    patterns = {\n        'nats_jetstream': [\n            r'jetstream',\n            r'\\.pub"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 215,
      "context": "rns = {\n        'nats_jetstream': [\n            r'jetstream',\n            r'\\.publish\\s*\\(',\n            r'\\."
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "nats_jetstream",
      "pattern": "consumer.*group",
      "line": 219,
      "context": "r'xorb\\..*\\.ptaas\\.job\\.',\n            r'consumer.*group',\n            r'stream.*config'\n        ],"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 220,
      "context": ".',\n            r'consumer.*group',\n            r'stream.*config'\n        ],\n        'redis_pubsub': ["
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 222,
      "context": "r'stream.*config'\n        ],\n        'redis_pubsub': [\n            r'redis.*pub',\n            r'r"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 223,
      "context": "],\n        'redis_pubsub': [\n            r'redis.*pub',\n            r'redis.*sub',\n            r'\\.publ"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 222,
      "context": "r'stream.*config'\n        ],\n        'redis_pubsub': [\n            r'redis.*pub',\n            r'redi"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 224,
      "context": "bsub': [\n            r'redis.*pub',\n            r'redis.*sub',\n            r'\\.publish\\s*\\(',\n            r'\\."
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 222,
      "context": "r'stream.*config'\n        ],\n        'redis_pubsub': [\n            r'redis.*pub',\n            r'redi"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "redis_pubsub",
      "pattern": "pubsub",
      "line": 227,
      "context": "',\n            r'\\.subscribe\\s*\\(',\n            r'pubsub'\n        ],\n        'rabbitmq': [\n            r'r"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 229,
      "context": "\\s*\\(',\n            r'pubsub'\n        ],\n        'rabbitmq': [\n            r'rabbitmq',\n            r'amqp',"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 230,
      "context": "b'\n        ],\n        'rabbitmq': [\n            r'rabbitmq',\n            r'amqp',\n            r'queue\\.decla"
    },
    {
      "file": "tools/audit/service_scanner.py",
      "bus_type": "rabbitmq",
      "pattern": "amqp",
      "line": 231,
      "context": "bbitmq': [\n            r'rabbitmq',\n            r'amqp',\n            r'queue\\.declare',\n            r'ex"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_platform.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 24,
      "context": "\"postgresql\",\n            \"redis\", \n            \"rabbitmq\",\n            \"qdrant\",\n            \"prometheus\","
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_platform.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 379,
      "context": "\"postgresql\",\n            \"redis\", \n            \"rabbitmq\",\n            \"qdrant\",\n            \"prometheus\","
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 39,
      "context": "deploy_qdrant()\n            \n            # Deploy RabbitMQ Message Queue\n            await self.deploy_rabbi"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 40,
      "context": "bitMQ Message Queue\n            await self.deploy_rabbitmq()\n            \n            # Deploy PTaaS Core Se"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 224,
      "context": "ployment warning: {e}\")\n    \n    async def deploy_rabbitmq(self):\n        \"\"\"Deploy RabbitMQ Message Queue\"\""
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 225,
      "context": "sync def deploy_rabbitmq(self):\n        \"\"\"Deploy RabbitMQ Message Queue\"\"\"\n        rabbitmq_yaml = \"\"\"\napiV"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 226,
      "context": "\"\"\"Deploy RabbitMQ Message Queue\"\"\"\n        rabbitmq_yaml = \"\"\"\napiVersion: apps/v1\nkind: Deployment\nm"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 230,
      "context": "rsion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  namespace: xorb-platform\nspec:\n  replicas: 1"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 236,
      "context": "plicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        a"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 240,
      "context": "emplate:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      containers:\n      - name: rabbitm"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 243,
      "context": "abbitmq\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.12-management-alpine"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 244,
      "context": "containers:\n      - name: rabbitmq\n        image: rabbitmq:3.12-management-alpine\n        ports:\n        - c"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 249,
      "context": "containerPort: 15672\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: \"xorb\"\n        - na"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 251,
      "context": "AULT_USER\n          value: \"xorb\"\n        - name: RABBITMQ_DEFAULT_PASS\n          value: \"xorb_rabbit_2024\""
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 254,
      "context": "abbit_2024\"\n        volumeMounts:\n        - name: rabbitmq-data\n          mountPath: /var/lib/rabbitmq"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 255,
      "context": "name: rabbitmq-data\n          mountPath: /var/lib/rabbitmq\n        resources:\n          requests:"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 264,
      "context": "memory: 1Gi\n      volumes:\n      - name: rabbitmq-data\n        persistentVolumeClaim:\n          cla"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 266,
      "context": "persistentVolumeClaim:\n          claimName: rabbitmq-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 271,
      "context": "--\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  namespace: xorb-platform\nspec:\n  selector:"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 275,
      "context": "mespace: xorb-platform\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n  - name: amqp\n    port: 5672\n    target"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 288,
      "context": "v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: rabbitmq-pvc\n  namespace: xorb-platform\nspec:\n  accessMode"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 299,
      "context": "me: xorb-ssd\n\"\"\"\n        \n        with open('/tmp/rabbitmq.yaml', 'w') as f:\n            f.write(rabbitmq_ya"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 300,
      "context": "mp/rabbitmq.yaml', 'w') as f:\n            f.write(rabbitmq_yaml)\n        \n        try:\n            subproces"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 303,
      "context": "subprocess.run(['kubectl', 'apply', '-f', '/tmp/rabbitmq.yaml'], check=True)\n            logger.info(\"\u2705 Ra"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 304,
      "context": "mq.yaml'], check=True)\n            logger.info(\"\u2705 RabbitMQ Message Queue deployed\")\n        except subproces"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 306,
      "context": "rocessError as e:\n            logger.warning(f\"\u26a0\ufe0f RabbitMQ deployment warning: {e}\")\n    \n    async def depl"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 391,
      "context": "word@postgres:5432/xorb_platform\"\n        - name: RABBITMQ_URL\n          value: \"amqp://xorb:xorb_rabbit_202"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 392,
      "context": "RL\n          value: \"amqp://xorb:xorb_rabbit_2024@rabbitmq:5672\"\n        securityContext:\n          privileg"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 549,
      "context": "port:\n              number: 6333\n      - path: /rabbitmq\n        pathType: Prefix\n        backend:"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 553,
      "context": "backend:\n          service:\n            name: rabbitmq\n            port:\n              number: 15672\n\"\"\""
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 571,
      "context": "-n', 'xorb-platform', '-l', 'app in (neo4j,qdrant,rabbitmq,ptaas-bug-bounty,ptaas-exploit-validation,ptaas-r"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 584,
      "context": "'/tmp/neo4j.yaml', '/tmp/qdrant.yaml', '/tmp/rabbitmq.yaml',\n            '/tmp/bug-bounty.yaml', '/tmp/"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 613,
      "context": "\"  \u2705 Qdrant Vector Database\") \n        print(\"  \u2705 RabbitMQ Message Queue\")\n        print(\"  \u2705 Bug Bounty Ser"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 623,
      "context": "s://ptaas.verteidiq.com/qdrant\")\n        print(\"  RabbitMQ Management: https://ptaas.verteidiq.com/rabbitmq\""
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 623,
      "context": "RabbitMQ Management: https://ptaas.verteidiq.com/rabbitmq\")\n        print(\"=\"*80)\n        \n    except Excep"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "amqp",
      "line": 277,
      "context": "selector:\n    app: rabbitmq\n  ports:\n  - name: amqp\n    port: 5672\n    targetPort: 5672\n  - name: man"
    },
    {
      "file": "tools/scripts/deployment/deploy_ptaas_k8s.py",
      "bus_type": "rabbitmq",
      "pattern": "amqp",
      "line": 392,
      "context": "m\"\n        - name: RABBITMQ_URL\n          value: \"amqp://xorb:xorb_rabbit_2024@rabbitmq:5672\"\n        se"
    },
    {
      "file": "tools/scripts/utilities/platform_status_dashboard.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 22,
      "context": "tend\"],\n            \"ptaas\": [\"neo4j\", \"qdrant\", \"rabbitmq\", \"ptaas-bug-bounty\", \"ptaas-exploit-validation\","
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_orchestration_dashboard.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 100,
      "context": "ost:6381\"\n        }\n        \n        # Initialize Streamlit configuration\n        self._setup_streamlit()"
    },
    {
      "file": "tools/scripts/utilities/xorb_platform_orchestration_dashboard.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 106,
      "context": "def _setup_streamlit(self):\n        \"\"\"Setup Streamlit page configuration\"\"\"\n        st.set_page_config("
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 419,
      "context": "ent registration\n            await self.redis_pool.publish(\n                \"threat_hunting:agent_events\","
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "nats_jetstream",
      "pattern": "\\.publish\\s*\\(",
      "line": 481,
      "context": "y task scheduler\n            await self.redis_pool.publish(\n                \"threat_hunting:task_events\","
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 419,
      "context": "nnounce agent registration\n            await self.redis_pool.publish(\n                \"threat_hunting:agent_events"
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*pub",
      "line": 481,
      "context": "# Notify task scheduler\n            await self.redis_pool.publish(\n                \"threat_hunting:task_events\""
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 419,
      "context": "ent registration\n            await self.redis_pool.publish(\n                \"threat_hunting:agent_events\","
    },
    {
      "file": "tools/scripts/utilities/distributed_threat_hunting.py",
      "bus_type": "redis_pubsub",
      "pattern": "\\.publish\\s*\\(",
      "line": 481,
      "context": "y task scheduler\n            await self.redis_pool.publish(\n                \"threat_hunting:task_events\","
    },
    {
      "file": "tools/scripts/utilities/verify_hardened_deploy.py",
      "bus_type": "redis_pubsub",
      "pattern": "redis.*sub",
      "line": 230,
      "context": "ot ready\"}\n\n            # Check Redis\n            redis_result = subprocess.run(\n                [\"docker\", \"compose\","
    },
    {
      "file": "tools/scripts/utilities/validate_platform.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 40,
      "context": "\"Redis\": \"http://localhost:6381\", \n            \"RabbitMQ\": \"http://localhost:15672\",\n            \"Qdrant\":"
    },
    {
      "file": "tools/scripts/utilities/xorb_ecosystem_integration.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 241,
      "context": "buted_ready\",\n                \"task_queue\": \"nats_jetstream\"\n            },\n            \"orchestrator_service"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 10,
      "context": "ce\n- HPA/VPA dynamic scaling configuration\n- NATS JetStream event-driven architecture\n- Prometheus metrics an"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 75,
      "context": "# Event system\n        await self.verify_nats_jetstream()\n\n        # Monitoring and metrics\n        await"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 310,
      "context": "* 1000)\n            ))\n\n    async def verify_nats_jetstream(self):\n        \"\"\"Verify NATS JetStream is config"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 311,
      "context": "rify_nats_jetstream(self):\n        \"\"\"Verify NATS JetStream is configured\"\"\"\n        start_time = time.time()"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 316,
      "context": "t nats.connect(self.nats_url)\n            js = nc.jetstream()\n\n            # Check for Xorb events stream"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 323,
      "context": "cationResult(\n                    component=\"NATS JetStream\",\n                    check=\"Stream Configuration"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 337,
      "context": "cationResult(\n                    component=\"NATS JetStream\",\n                    check=\"Stream Configuration"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 348,
      "context": "rificationResult(\n                component=\"NATS JetStream\",\n                check=\"Connectivity\","
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 351,
      "context": "status=\"fail\",\n                message=f\"NATS JetStream verification failed: {str(e)}\",\n                d"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 311,
      "context": "y_nats_jetstream(self):\n        \"\"\"Verify NATS JetStream is configured\"\"\"\n        start_time = time.time()"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 324,
      "context": "nent=\"NATS JetStream\",\n                    check=\"Stream Configuration\",\n                    status=\"pass\","
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 326,
      "context": "=\"pass\",\n                    message=\"XORB_EVENTS stream is configured\",\n                    details={"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 329,
      "context": "ate.messages,\n                        \"subjects\": stream_info.config.subjects,\n                        \"consumers\": st"
    },
    {
      "file": "tools/scripts/utilities/sprint1_deployment_verification.py",
      "bus_type": "nats_jetstream",
      "pattern": "stream.*config",
      "line": 338,
      "context": "nent=\"NATS JetStream\",\n                    check=\"Stream Configuration\",\n                    status=\"warning\","
    },
    {
      "file": "tools/scripts/utilities/ultimate_production_readiness_report.py",
      "bus_type": "nats_jetstream",
      "pattern": "jetstream",
      "line": 161,
      "context": "{\n                'description': 'Redis and NATS JetStream',\n                'score': 88,\n                's"
    },
    {
      "file": "tools/scripts/validation/complete_service_audit.py",
      "bus_type": "rabbitmq",
      "pattern": "rabbitmq",
      "line": 41,
      "context": "unknown\", \"priority\": \"medium\"},\n                \"rabbitmq\": {\"type\": \"message_queue\", \"status\": \"unknown\","
    }
  ]
}
