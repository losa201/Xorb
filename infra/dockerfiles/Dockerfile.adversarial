# XORB Adversarial Engine Dockerfile
# Multi-stage build for optimized production image

FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_ENV=production
ARG PYTHON_VERSION=3.11

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libc6-dev \
    libffi-dev \
    libssl-dev \
    cargo \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements/adversarial.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --user -r /tmp/requirements.txt

# ==========================================
# Production stage
# ==========================================

FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH="/app:$PYTHONPATH" \
    APP_ENV=production

# Create app user
RUN groupadd -r xorb && useradd -r -g xorb xorb

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder /root/.local /home/xorb/.local

# Create application directories
RUN mkdir -p /app/{logs,models,data,config} \
    && chown -R xorb:xorb /app

WORKDIR /app

# Copy application code
COPY --chown=xorb:xorb domains/adversarial/ ./adversarial/
COPY --chown=xorb:xorb domains/core/ ./core/
COPY --chown=xorb:xorb domains/utils/ ./utils/
COPY --chown=xorb:xorb src/shared/ ./shared/

# Copy entrypoint and configuration
COPY --chown=xorb:xorb scripts/docker/adversarial-entrypoint.sh ./entrypoint.sh
COPY --chown=xorb:xorb config/adversarial/ ./config/

# Make entrypoint executable
RUN chmod +x ./entrypoint.sh

# Create health check script
RUN echo '#!/bin/bash\ncurl -f http://localhost:8001/health || exit 1' > /app/healthcheck.sh \
    && chmod +x /app/healthcheck.sh

# Switch to app user
USER xorb

# Update PATH for user packages
ENV PATH="/home/xorb/.local/bin:$PATH"

# Expose ports
EXPOSE 8001 8002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ["/app/healthcheck.sh"]

# Set entrypoint
ENTRYPOINT ["./entrypoint.sh"]
CMD ["python", "-m", "adversarial.main"]