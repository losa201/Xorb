# Strict mTLS Policy for XORB Platform
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: xorb-strict-mtls
  namespace: xorb-platform
spec:
  mtls:
    mode: STRICT
---
# Namespace-wide strict mTLS
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: xorb-namespace-mtls
  namespace: xorb-platform
spec:
  mtls:
    mode: STRICT
---
# API Service mTLS Configuration
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: xorb-api-mtls
  namespace: xorb-platform
spec:
  selector:
    matchLabels:
      app: xorb-api
  mtls:
    mode: STRICT
  portLevelMtls:
    8000:
      mode: STRICT
---
# Destination Rules for mTLS
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: xorb-api-dr
  namespace: xorb-platform
spec:
  host: xorb-api.xorb-platform.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
      cipherSuites:
        - ECDHE-ECDSA-AES256-GCM-SHA384
        - ECDHE-ECDSA-CHACHA20-POLY1305
        - ECDHE-ECDSA-AES128-GCM-SHA256
        - ECDHE-RSA-AES256-GCM-SHA384
        - ECDHE-RSA-CHACHA20-POLY1305
        - ECDHE-RSA-AES128-GCM-SHA256
      ecdhCurves:
        - X25519
        - P-256
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: xorb-orchestrator-dr
  namespace: xorb-platform
spec:
  host: xorb-orchestrator.xorb-platform.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: xorb-agent-dr
  namespace: xorb-platform
spec:
  host: xorb-agent.xorb-platform.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: xorb-redis-dr
  namespace: xorb-platform
spec:
  host: xorb-redis.xorb-platform.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
      minProtocolVersion: TLSV1_2
      maxProtocolVersion: TLSV1_3
---
# Authorization Policies
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: xorb-api-authz
  namespace: xorb-platform
spec:
  selector:
    matchLabels:
      app: xorb-api
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/xorb-platform/sa/xorb-orchestrator"]
    - source:
        principals: ["cluster.local/ns/xorb-platform/sa/xorb-agent"]
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
        paths: ["/api/v1/*"]
  - from:
    - source:
        principals: ["cluster.local/ns/xorb-platform/sa/xorb-prometheus"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics", "/api/v1/health"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: xorb-agent-authz
  namespace: xorb-platform
spec:
  selector:
    matchLabels:
      app: xorb-agent
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/xorb-platform/sa/xorb-api"]
    - source:
        principals: ["cluster.local/ns/xorb-platform/sa/xorb-orchestrator"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/agent/*", "/health"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: xorb-redis-authz
  namespace: xorb-platform
spec:
  selector:
    matchLabels:
      app: xorb-redis
  rules:
  - from:
    - source:
        principals: 
          - "cluster.local/ns/xorb-platform/sa/xorb-api"
          - "cluster.local/ns/xorb-platform/sa/xorb-orchestrator"
          - "cluster.local/ns/xorb-platform/sa/xorb-agent"
    to:
    - operation:
        ports: ["6379"]
---
# Network Policies for Defense in Depth
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: xorb-platform-network-policy
  namespace: xorb-platform
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: xorb-platform
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: xorb-platform
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: cert-manager
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
---
# Service Mesh Configuration
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: xorb-istio-config
  namespace: istio-system
spec:
  values:
    global:
      meshConfig:
        defaultConfig:
          gatewayTopology:
            numTrustedProxies: 2
        trustDomain: xorb.local
        trustDomainAliases:
          - xorb-platform.local
    pilot:
      env:
        EXTERNAL_ISTIOD: false
        PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
  components:
    pilot:
      k8s:
        env:
          - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
            value: "true"
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
          - port: 80
            targetPort: 8080
            name: http2
          - port: 443
            targetPort: 8443
            name: https
        overlays:
        - apiVersion: v1
          kind: Service
          name: istio-ingressgateway
          patches:
          - path: spec.ports
            value:
            - name: status-port
              port: 15021
              protocol: TCP
              targetPort: 15021
            - name: http2
              port: 80
              protocol: TCP
              targetPort: 8080
            - name: https
              port: 443
              protocol: TCP
              targetPort: 8443
            - name: tls
              port: 15443
              protocol: TCP
              targetPort: 15443