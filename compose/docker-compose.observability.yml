version: '3.9'

# Observability stack for Xorb PTaaS
# Loki + Promtail, Prometheus + Grafana, Pyroscope

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: xorb_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.wal-compression'
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    networks:
      - xorb-network
      - monitoring
    # EPYC optimization
    cpus: '1.0'
    cpu_quota: 100000
    mem_limit: 2g
    mem_reservation: 1g
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:exec,size=500m
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: xorb_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - prometheus
    # EPYC optimization
    cpus: '1.0'
    cpu_quota: 100000
    mem_limit: 1g
    mem_reservation: 512m
    cap_drop:
      - ALL
    tmpfs:
      - /tmp:exec,size=200m
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: xorb_loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki:/etc/loki:ro
      - loki_data:/loki
    networks:
      - monitoring
    # EPYC optimization
    cpus: '1.0'
    cpu_quota: 100000
    mem_limit: 2g
    mem_reservation: 1g
    cap_drop:
      - ALL
    tmpfs:
      - /tmp:exec,size=500m
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: xorb_promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./observability/promtail:/etc/promtail:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    depends_on:
      - loki
    # EPYC optimization
    cpus: '0.5'
    cpu_quota: 50000
    mem_limit: 512m
    mem_reservation: 256m
    cap_drop:
      - ALL
    cap_add:
      - DAC_READ_SEARCH
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  # Pyroscope for continuous profiling
  pyroscope:
    image: pyroscope/pyroscope:latest
    container_name: xorb_pyroscope
    ports:
      - "4040:4040"
    environment:
      - PYROSCOPE_LOG_LEVEL=info
      - PYROSCOPE_BADGER_LOG_LEVEL=error
    volumes:
      - pyroscope_data:/var/lib/pyroscope
      - ./observability/pyroscope:/etc/pyroscope:ro
    networks:
      - monitoring
    # EPYC optimization
    cpus: '1.0'
    cpu_quota: 100000
    mem_limit: 1g
    mem_reservation: 512m
    cap_drop:
      - ALL
    tmpfs:
      - /tmp:exec,size=200m
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4040/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AlertManager for alerting
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: xorb_alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./observability/alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    networks:
      - monitoring
    depends_on:
      - prometheus
    # EPYC optimization
    cpus: '0.5'
    cpu_quota: 50000
    mem_limit: 512m
    mem_reservation: 256m
    cap_drop:
      - ALL
    tmpfs:
      - /tmp:exec,size=100m
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: xorb_node_exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.cpu.info'
      - '--collector.meminfo_numa'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    # EPYC optimization
    cpus: '0.2'
    cpu_quota: 20000
    mem_limit: 256m
    mem_reservation: 128m
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    pid: host

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: xorb_cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring
    # EPYC optimization
    cpus: '0.3'
    cpu_quota: 30000
    mem_limit: 512m
    mem_reservation: 256m
    cap_drop:
      - ALL
    cap_add:
      - SYS_ADMIN
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
  xorb-network:
    external: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  pyroscope_data:
    driver: local
  alertmanager_data:
    driver: local