# Default values for ray-cluster
# This is a YAML-formatted file.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  xorb:
    environment: "dev"
    version: "2.0.0"

# Ray cluster configuration
rayCluster:
  name: xorb-ray
  namespace: xorb-dev

# Ray Head node configuration
rayHead:
  enabled: true
  replicaCount: 1
  
  image:
    registry: docker.io
    repository: rayproject/ray
    tag: "2.8.0-py310"
    pullPolicy: IfNotPresent
    pullSecrets: []
  
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "8Gi"
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  # Ray head specific configuration
  rayStartParams:
    dashboard-host: "0.0.0.0"
    dashboard-port: "8265"
    port: "6379"
    redis-password: ""
    block: true
    
  # Environment variables
  env:
    - name: RAY_DISABLE_IMPORT_WARNING
      value: "1"
    - name: RAY_scheduler_placement_group_strict_packing
      value: "0"
    - name: PYTHONPATH
      value: "/workspace"
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      dashboard: 8265
      client: 10001
      gcs: 6379
    annotations: {}
  
  # Storage configuration
  persistence:
    enabled: false
    storageClass: ""
    size: 10Gi
    accessMode: ReadWriteOnce
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
      - ALL

# Ray Worker nodes configuration
rayWorkers:
  enabled: true
  replicaCount: 2
  
  image:
    registry: docker.io
    repository: rayproject/ray
    tag: "2.8.0-py310"
    pullPolicy: IfNotPresent
    pullSecrets: []
  
  resources:
    requests:
      cpu: "2"
      memory: "8Gi"
    limits:
      cpu: "8"
      memory: "16Gi"
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  # Ray worker specific configuration
  rayStartParams:
    block: true
    
  # Environment variables
  env:
    - name: RAY_DISABLE_IMPORT_WARNING
      value: "1"
    - name: PYTHONPATH
      value: "/workspace"
  
  # Autoscaling configuration
  autoscaler:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    scaleDownDelaySecondsAfterAdd: 300
    scaleDownDelaySecondsAfterDelete: 60
  
  # Pod disruption budget
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
      - ALL

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  namespace: ""
  labels: {}
  annotations: {}
  interval: "30s"
  scrapeTimeout: "30s"
  path: "/metrics"

# Network policies
networkPolicy:
  enabled: false
  ingress: []
  egress: []

# RBAC configuration
rbac:
  create: true
  
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Monitoring and logging
monitoring:
  enabled: true
  prometheus:
    enabled: true
    port: 8080
    path: "/metrics"
  
  grafana:
    enabled: true
    dashboards:
      enabled: true

# Startup and liveness probes
probes:
  startup:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1
  
  liveness:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  
  readiness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# Additional configurations
extraVolumes: []
extraVolumeMounts: []
extraContainers: []
extraInitContainers: []

# Custom configuration files
config:
  # Ray configuration
  ray.yaml: |
    ray:
      runtime_env:
        working_dir: "/workspace"
        pip:
          - ray[default]==2.8.0
          - torch>=2.0.0
          - stable-baselines3>=2.2.0
          - optuna>=3.4.0
          - mlflow>=2.8.0

# Labels and annotations
commonLabels:
  app.kubernetes.io/name: ray-cluster
  app.kubernetes.io/component: learning-infrastructure
  app.kubernetes.io/part-of: xorb
  xorb.ai/layer: learning

commonAnnotations:
  xorb.ai/managed-by: helm
  xorb.ai/version: "2.0.0"