{
  "enhancement_config": {
    "orchestrator_name": "XORB Qwen3-Coder Autonomous Enhancement System",
    "version": "1.0.0",
    "ai_model": "qwen/qwen3-coder:free",
    "api_provider": "OpenRouter.ai",
    "enhancement_mode": "autonomous",
    
    "scan_configuration": {
      "target_extensions": [".py", ".sh", ".yaml", ".yml", ".json", ".env", ".dockerfile"],
      "priority_folders": ["orchestrator", "agents", "scripts", "services", "configs", "xorb_core", "packages"],
      "exclude_patterns": ["__pycache__", ".git", "node_modules", "*.pyc", "*.log"],
      "max_files_per_cycle": 20,
      "max_file_size_mb": 5
    },
    
    "analysis_configuration": {
      "focus_areas": [
        "python_3_12_compatibility",
        "asyncio_optimization", 
        "error_handling_resilience",
        "security_vulnerabilities",
        "performance_bottlenecks",
        "memory_usage_optimization",
        "code_maintainability"
      ],
      "issue_priorities": {
        "critical": ["security", "runtime_errors", "syntax_errors"],
        "high": ["performance", "async_blocking", "resource_leaks"],
        "medium": ["maintainability", "code_style", "documentation"],
        "low": ["optimization", "minor_improvements"]
      }
    },
    
    "enhancement_configuration": {
      "max_enhancements_per_file": 3,
      "max_enhancements_per_cycle": 50,
      "auto_apply_thresholds": {
        "low_risk": true,
        "medium_risk": true,
        "high_risk": false
      },
      "enhancement_types": {
        "performance": {
          "enabled": true,
          "techniques": ["list_comprehensions", "async_optimization", "caching", "algorithm_improvement"]
        },
        "concurrency": {
          "enabled": true,
          "techniques": ["asyncio_conversion", "thread_pool_optimization", "async_context_managers"]
        },
        "error_handling": {
          "enabled": true,
          "techniques": ["specific_exception_handling", "retry_mechanisms", "fallback_patterns"]
        },
        "security": {
          "enabled": true,
          "techniques": ["input_validation", "secure_defaults", "credential_protection"]
        },
        "maintainability": {
          "enabled": true,
          "techniques": ["code_refactoring", "documentation_improvement", "type_hints"]
        }
      }
    },
    
    "testing_configuration": {
      "run_tests_after_changes": true,
      "test_frameworks": ["pytest", "make test", "python -m unittest"],
      "test_timeout_seconds": 300,
      "rollback_on_test_failure": true
    },
    
    "git_configuration": {
      "auto_commit": true,
      "commit_message_template": "âœ¨ [Auto-Qwen3] {enhancement_summary}\n\n{details}\n\nðŸ§  Generated with Qwen3-Coder autonomous enhancement\nðŸ¤– XORB Self-Improving Codebase\n\nCo-Authored-By: Qwen3-Coder <noreply@qwen.ai>",
      "branch_strategy": "main",
      "create_backup_branch": false
    },
    
    "logging_configuration": {
      "log_level": "INFO",
      "log_file": "logs/qwen3_enhancement.log",
      "cycle_results_dir": "logs/cycles/",
      "backup_dir": "backups/enhancements/",
      "detailed_diffs": true,
      "performance_metrics": true
    },
    
    "scheduling_configuration": {
      "cycle_interval_seconds": 600,
      "max_cycles": null,
      "pause_on_errors": false,
      "adaptive_scheduling": true,
      "quiet_hours": {
        "enabled": false,
        "start_hour": 22,
        "end_hour": 6
      }
    },
    
    "safety_configuration": {
      "max_changes_per_cycle": 20,
      "backup_before_changes": true,
      "validation_required": true,
      "human_review_threshold": {
        "file_size_kb": 100,
        "complexity_score": 8.0,
        "critical_files": ["main.py", "config.py", "__init__.py"]
      }
    },
    
    "performance_targets": {
      "analysis_time_per_file_ms": 500,
      "max_cycle_duration_minutes": 30,
      "memory_usage_limit_mb": 1000,
      "concurrent_analyses": 5
    },
    
    "integration_configuration": {
      "openrouter_api": {
        "base_url": "https://openrouter.ai/api/v1",
        "model": "qwen/qwen3-coder:free",
        "max_tokens": 4000,
        "temperature": 0.1,
        "timeout_seconds": 30
      },
      "webhook_notifications": {
        "enabled": false,
        "urls": [],
        "events": ["cycle_complete", "enhancement_applied", "error_occurred"]
      }
    }
  },
  
  "prompts": {
    "code_analysis_prompt": "As Qwen3-Coder, perform comprehensive code analysis on this {file_type} file: {file_path}\n\nCODE TO ANALYZE:\n```{file_type}\n{file_content}\n```\n\nProvide detailed analysis in JSON format focusing on:\n1. Python 3.12+ compatibility\n2. Asyncio optimization\n3. Error handling and resilience\n4. Security vulnerabilities\n5. Performance bottlenecks\n6. Memory usage optimization\n7. Code maintainability",
    
    "fix_generation_prompt": "As Qwen3-Coder, generate a specific code fix for this issue:\n\nISSUE: {issue_description}\nTYPE: {issue_type}\nSEVERITY: {issue_severity}\nRECOMMENDATION: {recommendation}\n\nORIGINAL CODE CONTEXT:\n```python\n{code_context}\n```\n\nProvide ONLY the fixed code snippet (no explanations):",
    
    "enhancement_prompt": "As Qwen3-Coder, implement this enhancement:\n\nENHANCEMENT: {enhancement_description}\nTYPE: {enhancement_type}\nPRIORITY: {priority}\nIMPLEMENTATION: {implementation_steps}\n\nORIGINAL CODE:\n```python\n{original_code}\n```\n\nProvide the enhanced code:"
  },
  
  "metrics": {
    "tracked_metrics": [
      "files_analyzed_per_cycle",
      "issues_found_per_cycle", 
      "enhancements_applied_per_cycle",
      "test_success_rate",
      "commit_success_rate",
      "cycle_duration_seconds",
      "code_quality_improvement",
      "performance_impact"
    ],
    "quality_thresholds": {
      "minimum_test_pass_rate": 0.95,
      "maximum_cycle_failures": 3,
      "code_complexity_target": 7.0,
      "security_score_minimum": 8.0
    }
  }
}