---
version: '3.8'

services:
  postgres:
    image: ankane/pgvector:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=xorb
      - POSTGRES_PASSWORD=xorb_secure_2024
      - POSTGRES_DB=xorb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xorb -d xorb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.23.0
    ports:
      - "7233:7233"
      - "8233:8233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=xorb
      - POSTGRES_PWD=xorb_secure_2024
      - POSTGRES_DB=xorb
      - POSTGRES_SEEDS=postgres
      - SKIP_SCHEMA_SETUP=false
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DSN=postgresql://xorb:xorb_secure_2024@postgres:5432/xorb
      - REDIS_URL=redis://redis:6379/0
      - TEMPORAL_HOST=temporal:7233
      - ENABLE_METRICS=true
      - PYTHONPATH=/app
      - NVIDIA_API_KEY=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
      - NVIDIA_BASE_URL=https://integrate.api.nvidia.com/v1
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      temporal:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    ports:
      - "9000:9000"
    environment:
      - TEMPORAL_HOST=temporal:7233
      - TASK_QUEUE=xorb-task-queue
      - METRICS_PORT=9000
      - ENABLE_METRICS=true
      - PYTHONPATH=/app
      - POSTGRES_DSN=postgresql://xorb:xorb_secure_2024@postgres:5432/xorb
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      temporal:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    environment:
      - TEMPORAL_HOST=temporal:7233
      - POSTGRES_DSN=postgresql://xorb:xorb_secure_2024@postgres:5432/xorb
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - ./targets.json:/app/targets.json
    depends_on:
      temporal:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: