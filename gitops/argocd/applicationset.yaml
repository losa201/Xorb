apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: xorb-environments
  namespace: argocd
  labels:
    app.kubernetes.io/name: xorb-applicationset
    app.kubernetes.io/part-of: xorb-gitops
spec:
  generators:
  - list:
      elements:
      - environment: dev
        namespace: xorb-dev
        server: https://kubernetes.default.svc
        project: xorb-dev
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: develop
        path: gitops/overlays/dev
      - environment: staging
        namespace: xorb-staging
        server: https://kubernetes.default.svc
        project: xorb-staging
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: main
        path: gitops/overlays/staging
      - environment: production
        namespace: xorb-prod
        server: https://kubernetes.default.svc
        project: xorb-prod
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: v2.0.0
        path: gitops/overlays/production
  template:
    metadata:
      name: 'xorb-{{environment}}'
      namespace: '{{namespace}}'
      labels:
        app.kubernetes.io/name: xorb
        app.kubernetes.io/instance: '{{environment}}'
        app.kubernetes.io/part-of: xorb
        xorb.ai/environment: '{{environment}}'
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: xorb-deployments
        notifications.argoproj.io/subscribe.on-sync-failed.slack: xorb-alerts
    spec:
      project: '{{project}}'
      source:
        repoURL: '{{repoURL}}'
        targetRevision: '{{targetRevision}}'
        path: '{{path}}'
      destination:
        server: '{{server}}'
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: '{{ if eq .environment "production" }}false{{ else }}true{{ end }}'
        syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=foreground
        - '{{ if eq .environment "production" }}ApplyOutOfSyncOnly=true{{ else }}PruneLast=true{{ end }}'
      ignoreDifferences:
      - group: apps
        kind: Deployment
        jsonPointers:
        - /spec/replicas
      - group: ""
        kind: Secret
        jsonPointers:
        - /data
      revisionHistoryLimit: 10
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: xorb-helm-charts
  namespace: argocd
  labels:
    app.kubernetes.io/name: xorb-helm-applicationset
    app.kubernetes.io/part-of: xorb-gitops
spec:
  generators:
  - list:
      elements:
      - environment: dev
        namespace: xorb-dev
        server: https://kubernetes.default.svc
        project: xorb-dev
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: develop
        valuesFile: values-dev.yaml
      - environment: staging
        namespace: xorb-staging
        server: https://kubernetes.default.svc
        project: xorb-staging
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: main
        valuesFile: values-staging.yaml
      - environment: production
        namespace: xorb-prod
        server: https://kubernetes.default.svc
        project: xorb-prod
        repoURL: https://github.com/losa201/Xorb.git
        targetRevision: v2.0.0
        valuesFile: values-epyc.yaml
  template:
    metadata:
      name: 'xorb-helm-{{environment}}'
      namespace: '{{namespace}}'
      labels:
        app.kubernetes.io/name: xorb-helm
        app.kubernetes.io/instance: '{{environment}}'
        app.kubernetes.io/part-of: xorb
        xorb.ai/environment: '{{environment}}'
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: '{{project}}'
      source:
        repoURL: '{{repoURL}}'
        targetRevision: '{{targetRevision}}'
        path: gitops/helm/xorb-core
        helm:
          valueFiles:
          - values.yaml
          - '{{valuesFile}}'
          parameters:
          - name: global.xorb.environment
            value: '{{environment}}'
      destination:
        server: '{{server}}'
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: '{{ if eq .environment "production" }}false{{ else }}true{{ end }}'
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
      revisionHistoryLimit: 5