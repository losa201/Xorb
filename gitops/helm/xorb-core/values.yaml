# Default values for Xorb 2.0 Core Services
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  imagePullSecrets: []
  # Xorb Configuration
  xorb:
    domain: "xorb.local"
    environment: "development"
    logLevel: "INFO"
    debug: false
    
# Service Configuration
services:
  api:
    name: xorb-api
    replicaCount: 2
    image:
      repository: xorb/api
      tag: "2.0.0"
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 8000
      targetPort: 8000
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80
    
  worker:
    name: xorb-worker
    replicaCount: 4
    image:
      repository: xorb/worker
      tag: "2.0.0"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2"
        memory: "4Gi"
    autoscaling:
      enabled: true
      minReplicas: 4
      maxReplicas: 20
      targetCPUUtilizationPercentage: 75
      
  orchestrator:
    name: xorb-orchestrator
    replicaCount: 2
    image:
      repository: xorb/orchestrator
      tag: "2.0.0"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "300m"
        memory: "768Mi"
      limits:
        cpu: "1"
        memory: "2Gi"

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: api.xorb.local
      paths:
        - path: /
          pathType: Prefix
          service:
            name: xorb-api
            port: 8000
  tls:
    - secretName: xorb-tls
      hosts:
        - api.xorb.local

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  namespace: monitoring
  labels:
    app: xorb
  interval: 30s
  scrapeTimeout: 10s

# Pod Security Context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

# Node Selector for EPYC optimization
nodeSelector:
  kubernetes.io/arch: amd64
  node.kubernetes.io/cpu-family: "EPYC"

# Tolerations and Affinity
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/part-of
            operator: In
            values:
            - xorb
        topologyKey: kubernetes.io/hostname

# Dependencies Configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "xorb-postgres-password"
    database: "xorb"
  primary:
    persistence:
      enabled: true
      size: 50Gi
    resources:
      requests:
        cpu: "500m"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

temporal:
  enabled: true
  server:
    replicaCount: 2
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

qdrant:
  enabled: true
  replicaCount: 2
  resources:
    requests:
      cpu: "2"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "8Gi"
  persistence:
    size: 100Gi

neo4j:
  enabled: true
  standalone:
    resources:
      requests:
        cpu: "1"
        memory: "4Gi"
      limits:
        cpu: "2"
        memory: "8Gi"

nats:
  enabled: true
  nats:
    jetstream:
      enabled: true
    resources:
      requests:
        cpu: "200m"
        memory: "1Gi"
      limits:
        cpu: "500m"
        memory: "2Gi"