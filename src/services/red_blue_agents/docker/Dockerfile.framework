# Multi-stage Dockerfile for XORB Red/Blue Agent Framework
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    git \
    wget \
    unzip \
    gnupg \
    lsb-release \
    ca-certificates \
    apt-transport-https \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Install Docker CLI for sandbox management
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && rm -rf /var/lib/apt/lists/*

# Install security tools for red team agents
RUN apt-get update && apt-get install -y \
    nmap \
    nikto \
    dirb \
    gobuster \
    sqlmap \
    hydra \
    john \
    hashcat \
    metasploit-framework \
    && rm -rf /var/lib/apt/lists/*

# Install Nuclei
RUN wget -q https://github.com/projectdiscovery/nuclei/releases/latest/download/nuclei_2.9.15_linux_amd64.zip \
    && unzip nuclei_2.9.15_linux_amd64.zip \
    && mv nuclei /usr/local/bin/ \
    && rm nuclei_2.9.15_linux_amd64.zip

# Install SSLScan
RUN git clone https://github.com/rbsec/sslscan.git /tmp/sslscan \
    && cd /tmp/sslscan \
    && make static \
    && cp sslscan /usr/local/bin/ \
    && cd / \
    && rm -rf /tmp/sslscan

# Create application user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy requirements
COPY requirements.txt requirements-agents.txt ./

# Install Python dependencies
RUN pip install --upgrade pip \
    && pip install -r requirements.txt \
    && pip install -r requirements-agents.txt

# Development stage
FROM base as development

# Install development dependencies
COPY requirements-dev.txt ./
RUN pip install -r requirements-dev.txt

# Copy source code
COPY . .

# Create directories
RUN mkdir -p /app/logs /app/models /app/data \
    && chown -R appuser:appuser /app

USER appuser

# Expose ports
EXPOSE 8000 8001 8002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["python", "-m", "uvicorn", "src.api.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# Production stage
FROM base as production

# Copy only necessary files
COPY src/ ./src/
COPY configs/ ./configs/
COPY requirements.txt requirements-agents.txt ./

# Install production dependencies only
RUN pip install --no-dev -r requirements.txt \
    && pip install --no-dev -r requirements-agents.txt

# Create directories and set permissions
RUN mkdir -p /app/logs /app/models /app/data \
    && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Production command
CMD ["python", "-m", "uvicorn", "src.api.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# Agent-specific stages for specialized containers

# Red Team Reconnaissance Agent
FROM base as red-recon

# Install reconnaissance-specific tools
RUN apt-get update && apt-get install -y \
    masscan \
    zmap \
    amass \
    subfinder \
    assetfinder \
    httprobe \
    waybackurls \
    gau \
    && rm -rf /var/lib/apt/lists/*

# Copy agent-specific code
COPY src/services/red_blue_agents/agents/red_team.py ./src/services/red_blue_agents/agents/
COPY src/services/red_blue_agents/agents/base_agent.py ./src/services/red_blue_agents/agents/
COPY configs/ ./configs/

USER appuser
CMD ["python", "-m", "src.services.red_blue_agents.agents.red_team", "--agent-type", "recon"]

# Red Team Exploitation Agent
FROM base as red-exploit

# Install exploitation-specific tools
RUN apt-get update && apt-get install -y \
    exploitdb \
    searchsploit \
    msfconsole \
    beef-xss \
    && rm -rf /var/lib/apt/lists/*

# Copy agent-specific code
COPY src/services/red_blue_agents/agents/red_team.py ./src/services/red_blue_agents/agents/
COPY src/services/red_blue_agents/agents/base_agent.py ./src/services/red_blue_agents/agents/

USER appuser
CMD ["python", "-m", "src.services.red_blue_agents.agents.red_team", "--agent-type", "exploit"]

# Blue Team Detection Agent
FROM base as blue-detect

# Install detection-specific tools
RUN apt-get update && apt-get install -y \
    suricata \
    snort \
    ossec-hids \
    logwatch \
    fail2ban \
    rkhunter \
    chkrootkit \
    && rm -rf /var/lib/apt/lists/*

# Install Python ML libraries for behavioral analysis
RUN pip install \
    scikit-learn==1.3.2 \
    pandas==2.1.4 \
    numpy==1.24.4 \
    scipy==1.11.4

# Copy agent-specific code
COPY src/services/red_blue_agents/agents/blue_team.py ./src/services/red_blue_agents/agents/
COPY src/services/red_blue_agents/agents/base_agent.py ./src/services/red_blue_agents/agents/

USER appuser
CMD ["python", "-m", "src.services.red_blue_agents.agents.blue_team", "--agent-type", "detect"]

# Blue Team Hunting Agent
FROM base as blue-hunt

# Install hunting-specific tools
RUN apt-get update && apt-get install -y \
    yara \
    volatility \
    sleuthkit \
    autopsy \
    && rm -rf /var/lib/apt/lists/*

# Install threat hunting Python libraries
RUN pip install \
    yara-python==4.3.1 \
    volatility3==2.5.2 \
    sigma==0.21.3

# Copy agent-specific code
COPY src/services/red_blue_agents/agents/blue_team.py ./src/services/red_blue_agents/agents/
COPY src/services/red_blue_agents/agents/base_agent.py ./src/services/red_blue_agents/agents/

USER appuser
CMD ["python", "-m", "src.services.red_blue_agents.agents.blue_team", "--agent-type", "hunt"]

# Sandbox Orchestrator
FROM base as sandbox-orchestrator

# Install container runtime tools
RUN apt-get update && apt-get install -y \
    containerd \
    runc \
    && rm -rf /var/lib/apt/lists/*

# Copy orchestrator code
COPY src/services/red_blue_agents/core/sandbox_orchestrator.py ./src/services/red_blue_agents/core/
COPY configs/ ./configs/

USER appuser
EXPOSE 8001

CMD ["python", "-m", "src.services.red_blue_agents.core.sandbox_orchestrator"]

# Telemetry Collector
FROM base as telemetry-collector

# Install data processing libraries
RUN pip install \
    pandas==2.1.4 \
    numpy==1.24.4 \
    scikit-learn==1.3.2 \
    prometheus-client==0.19.0

# Copy telemetry code
COPY src/services/red_blue_agents/telemetry/ ./src/services/red_blue_agents/telemetry/
COPY configs/ ./configs/

USER appuser
EXPOSE 8002

CMD ["python", "-m", "src.services.red_blue_agents.telemetry.collector"]