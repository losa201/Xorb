
[tool.poetry]
name = "xorb-ptaas"
version = "2.0.0"
description = "Xorb PTaaS + Bug-Bounty Platform - Single-Node EPYC Deployment"
authors = ["Xorb Team <team@xorb.ai>"]
packages = [
    {include = "xorb_common"},
    {include = "services"},
]

[tool.poetry.dependencies]
python = "^3.12"
httpx = ">=0.25.0"
aiohttp = ">=3.8.0"
requests = ">=2.31.0"
asyncio-mqtt = ">=0.11.0"
asyncpg = ">=0.28.0"
redis = ">=5.0.0"
aioredis = ">=2.0.0"
SQLAlchemy = ">=2.0.0"
alembic = ">=1.12.0"
psycopg2-binary = ">=2.9.0"
playwright = ">=1.37.0"
selenium = ">=4.13.0"
pandas = ">=2.1.0"
numpy = ">=1.25.0"
scipy = ">=1.11.0"
cryptography = ">=41.0.0"
bcrypt = ">=4.0.0"
PyJWT = ">=2.8.0"
passlib = ">=1.7.0"
python-dotenv = ">=1.0.0"
pydantic = ">=2.4.0"
pydantic-settings = ">=2.0.0"
prometheus-client = ">=0.17.0"
psutil = ">=5.9.0"
rich = ">=13.5.0"
fastapi = ">=0.104.0"
uvicorn = ">=0.23.0"
marshmallow = ">=3.20.0"
python-dateutil = ">=2.8.0"
pytz = ">=2023.3"
structlog = ">=23.1.0"
colorama = ">=0.4.0"
# PTaaS specific dependencies
nats-py = ">=2.4.0"
stripe = ">=6.0.0"
docker = ">=6.1.0"
nuclei-py = ">=0.1.0"
openai = ">=1.0.0"
anthropic = ">=0.7.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"
mypy = ">=1.5.0"
ruff = ">=0.0.290"
black = ">=23.7.0"
pre-commit = ">=3.3.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C90", # mccabe
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "S",   # flake8-bandit
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM",  # flake8-errmsg
    "LOG", # flake8-logging
    "G",   # flake8-logging-format
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
]
ignore = [
    "S101", # assert
    "S603", # subprocess-without-shell-equals-true
    "S607", # start-process-with-partial-path
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
pythonpath = [
    ".",
    "xorb_common",
    "services/api",
    "services/worker",
    "services/orchestrator",
]
testpaths = ["tests"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["xorb_common", "services"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
